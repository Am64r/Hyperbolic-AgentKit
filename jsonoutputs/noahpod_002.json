[
  {
    "speaker": "Guest 1",
    "content": "Lower late lower latencies or latencies beneath a certain limit and humans because we we our CPU like our processing unit is like we can only process things so fast. Um I think there's some studies done around like what's the like shortest like page load times for a user to feel like it's instant. Um and I think that's like the hundreds of milliseconds. Um I I might be like totally off I I like just kind of remember from from recollection. But I think computers care about atomic composability computers computers care about lower latencies um to use Noah's like gaming example uh maybe like if you had a non-chain game and then let's say someone were to develop like a betting platform on the game. For human betters you know we're observing a game you can say oh yeah we'll respond with certain uh you know latencies or human latencies and but with if you have a trading algorithm that's trading on the outcome of the game, if it can be co-located in the same block space, then these algorithms can be highly highly efficient because they can react to every single move and like with every single move in a game you know like the probabilities of win or lose change. So now you can have this like HFT game bet this is a dystopian world, you have this like HFT like game betting system that's pretty much kind of like Wall Street like with all these like HFT algorithms. And um and and and that's going to be something that the folks who want to build and have co-located next to this like gaming block space."
  },
  {
    "speaker": "Rob",
    "content": "Yeah yeah I I think this is a good quote quote like uh humans can only like read so quickly it's like 250"
  },
  {
    "speaker": "Andy",
    "content": "milliseconds so so anything below that is fast enough for human users but what about algorithmic or computer users as Bo's alluding to, like yeah maybe I go and I I I make a trade and and something feels instant but if the price moves like there's still discrepancy that that some computer is able to act in between that that time frame. And so there's like user experience and then there's like application or or uh computer experience and I think you know that's where composability gets like extra important. And so Andy I know you have to follow up on like"
  },
  {
    "speaker": "Andy",
    "content": "Yeah Robbie I'm just trying to not bridge anymore. I mean to be honest with you I'm tired of switching networks, you know. That's like that's my goal here like you know I just want the basics. "
  },
  {
    "speaker": "Rob",
    "content": "But it's like it's like if you can if you I think both of these solutions, the synchronous composability and the asynchronous can both remove the need for bridges. It's like Yeah I can move to another app and it feels instant that I'm on that app. But what if my bridge takes like an extra basis point or 10 basis points because the price changed while I was going from app to app. That's the difference between like the 250 millisecond latency versus the atomic composability. And so I think it's important to kind of like to kind of bring us to a foundation here based on what we've talked about with kind of some of these gaming examples, this betting example and then also kind of how we're thinking about these clusters. And so, it seems like from inside of the clusters intra-cluster inside of these rollup clusters. What is most important is effectively maximum speed maximum uh atomicity same block transactions for the like the chains or roll ups within these clusters for specialized use cases. Or just in for example for like you know superchain and for elastic chain etcetera it's just that ability to have like um all these rollups to be able to synchronously uh share the same state at for every block and always kind of be on the same page. And so perhaps there's a security trade-off there or some sort of trade-off where we can kind of dive into that if that's so. But then for the inter-cluster so from between you know different clusters a gaming cluster a D51 superchain Arbitrum orbit etcetera. What seems to be more important um than atomicity is the security of these messages and of these transfers such that perhaps we'd be willing to accept a little bit more latency to ensure that when I'm in you know when I'm in Kansas and I'm sending a message to Florida that my my USPS is getting there I'm paying for a little extra. Um so is that kind of like the right way of thinking about this interoperability? Is that how you guys are thinking about it? What did I miss and kind of um what can you add there?"
  },
  {
    "speaker": "Guest 2",
    "content": "Yeah, the way I've been kind of thinking about it is for like the longer hop things, it's I think at a certain point, um async will be necessary. I think synchronous um is really something that you can really leverage. I think at first it'll be mostly within a single ecosystem but we have been exploring how to make it go beyond multiple ecosystems. One of the things that's actually coming out rel um relatively shortly. So I can give some alpha to the listeners on the pod today is starting now Javelin will support chains that aren't on Sealevel. So chains that have not opted into our shared sequencer will be able to leverage Javelin. So they can be a centralized sequencer, decentralized sequencer, they can be on another shared sequencer, using base pre-comps, even though once potentially could leverage it. And we're diving into that, and I think that synchronous atomic synchronous composability will really help drive down the costs of bridging. I think that at a certain point ZK proofs become kind of the end game of bridging. But I always think that ZK proofs will need some way of coordinating. I think that if you can build a coordinating mechanism that works much faster than them currently, and then later on leverage ZK proofs them. I think that's kind of the true end state for rollups so I think stuff like the Polygon Avail plus a super rollup is really where I see the end state of interop being between most chains. Um not all chains necessarily but I think most chains, I always think that there will exist kind of the Solanas and the Sui and the Aptos of the world that are kind of out there doing their own thing. But I also think that's almost the super powers of crypto because you can kind of say, 'we're going to do our own thing' and that doesn't necessarily mean that you end up with like a worse, necessary product. I think that like, in traditional web2 if you say, 'I'm not going to use any SAS providers to run my program. I'm not going to use AWS or Azure or anything.' You might cap yourself at like, how much you can do without spending an absurd amount of money. And in crypto, the nice thing is, you you really don't have those limits. Like you can't say, 'I'm going to go off on my own and do this.' And you can do it, which is a really powerful thing. And really helps the censorship resistance of the entire industry."
  },
  {
    "speaker": "Guest 1",
    "content": "I'll I'll add onto this um topic since you were on the topic of kind of safety and validity intra intra and inter cluster communication. Uh I think ZK proofs are valuable for validity.  Um unfortunately, with even intra and both intra and inter cluster communication on Ethereum. We also have this issue of reorg resistance. Um and what are the guarantees around that since safety is just one dimension of uh sorry validity is just one dimension of safety. I think the formal defini definition of safety involves uh a number of things like data availability's included, reorg resistance is included. Uh is also like censorship resistance like liveness like this other different properties. I just want to talk about reorg resistance and validity here. So my uh perspective on or how I think about what you get with like a single like inter inter cluster over single sequencer ecosystem is that you have sequencer level guarantees or that ecosystem will guarantee you safety beneath the like DA threshold. So let's say you post rollups in this ecosystem and post DA every two minutes. So sub two minutes the safety guarantees of this system are guaranteed by the sequencer and however that is implemented and however that is designed. Uh and then when you go across uh ecosystems or across clusters, you can go faster than two minutes but you're making an assumption on both of these sequencer guarantees being are playing nice with each other essentially. And uh Andy to your point on, you know, are people willing to wait a little bit longer for better guarantees going from cluster to cluster? Um maybe they are. If they're willing to wait like a little bit longer than two minutes, then you can have Ethereum level ordering guarantees. Like once DA has been posted uh these are much stronger than sequencer level guarantees. So there is like this balance between like like what guarantees do you get at what level of latency, and who is making those guarantees. So there's like a clear distinction of how this all works. But I think to Noah's point, I think there's going to be like really people are really going to favor that like really fast low latency or maybe even atomic composability intra-cluster or intra-cluster. And then intra-cluster is going to be maybe they'll wait a little bit longer uh to to have these like Ethereum level guarantees. Um and then from like a maybe I'll just give like a real world example here. My uh analogy is like when you want to enter an ecosystem to use a particular application, like let's say I want to trade on Robinhood. I have to transfer money to Robinhood. And generally that actually takes some time. Uh I don't know if anyone here on on the call uses Robinhood, but I I I I transfer money to Robinhood, Robinhood does not give me my money right away. It's not like I transfer it like 250 milliseconds later like Robinhood's like, 'Boom got your funds!' Like like like to trade. I have to wait a few days. Sometimes they even have to like ask me for like extra information and like it's it's it's it's a whole process, but that is normal. And I think it feels like in in in in web3 to to Andy's point of like being annoyed and having to like transfer your funds all over the place. It's actually really shitty in the real world too. If you want to go between like different trading platforms. I'm going to go TD Ameritrade to like this trading platform. Okay I have to like I'm going to pull my funds back from from Robinhood. Okay I got to wait for ACH transfer it's like a few days I got wait a few days. Um and then have to like bridge like bridge into like you know TD Ameritrade or this other trading app. And the experience is just as bad. And I think we would have the same complaints about the real world if like Robinhood or TD Ameritrade every single one of these like like uh trading um applications or or platforms were offering these like huge incentives to like, 'Hey trade on trade on our app. You can get 10,000 dollars free!'"
  }
]