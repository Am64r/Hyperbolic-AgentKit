[
  {
    "speaker": "Andy",
    "content": "Uh use case with certain paths validated by a by a specific set of operators"
  },
  {
    "speaker": "Guest",
    "content": "Yep that's right"
  },
  {
    "speaker": "Andy",
    "content": "Cool um and then uh you answered a couple of these questions already um okay so uh in terms of kinda the more generic EigenLayer questions um I I think you may have hit on this but just to expand a bit um could you talk us through like slashing conditions and slashing rules you know why might an operator uh or a staker be slashed um and I uh you know I I can kind of guess but uh I'm sure you would explain it uh explain it a bit better in terms of the checks and and passing legitimate signatures um and then the flip side of that is the API and how that's how that's generated you you spoke to the fees but maybe we'll we'll touch on that but yeah let's start with the the slashing and uh talk us through how that works"
  },
  {
    "speaker": "Guest",
    "content": "Yeah so the way we think of slashing and I will say on day one we don't have um slashing so instead some more of a proof authority model but uh so there is no slashing but here is why slashing does matter um the main things to think about slashing the the biggest question of course of like the biggest okay I think it's start taking a step back it's like okay so what could possibly go wrong in this system right so why do you have a distributed network you want it's because you wanna maintain you wanna address certain things that might go wrong the biggest thing of what what what could go wrong is an operator goes rogue an operator says you know what I'm going to enforce my own requirements I don't really care about what these guys want I'm gonna set my own requirements and so that could be you know uh stolen funds go through that's that could be one thing or sanctioned funds or it could start becoming a bit more precarious right they might say oh you know what there's not enough collateral here but I still want this to happen I want this thing I want this loan to happen I want this asset to be minted um I want this specific transaction to be executed in an intent system even though it shouldn't be because now an operator is basically uh partnered with someone who is planning to take advantage of an exploit that happens later and they're gonna take advantage of that exploit through that transaction route those are the things that could go wrong here so what you really need to think about from an economic from a slashing standpoint is operators need to be enforcing the specific requirements that are set and it's not this isn't opinionated it's deterministic because really what they're doing here is they should be checking the the specific rules that are set by that application the the actual rules are stored on Ethereum and it tells the operator here is the data you should be using here is the off-chain data here is the on-chain historical data this it's it it is it's meant to be deterministic this isn't something that they're like oh let me think about what's the best way to do it it's like no this is the right way so given that world you want the operator to behave the way that they're supposed to do the other risk too right is if you don't have um if an operator decides to do their own things they can also censor an application they could say we're not going to allow certain transactions to go through even though they should be that's a big problem for an application because now you suddenly have a centralization uh you now have a censorship vertical that's happening or a censorship exposure so that's where this becomes really important is ensuring that operators issue signatures when they should be and don't issue signatures when they when they shouldn't be you could have slashing I know there's been discussions like we've thought at one point about do we need slashing for um uptime we're not sure yet and that's because you have a distributed network of operators so in this case it's the first signatures that are issued are the ones that are included the application sets the quorum so maybe they'll say we want three signatures so be the first three signatures now that might be enough of an incentive you may not need slashing if an operator isn't uh responsive so this is something we'll probably have to figure out over time we don't have the I don't have the clearest answer yet but our current hypothesis is that we won't need slashing for that quite yet"
  },
  {
    "speaker": "Andy",
    "content": "And and so the the flip side of that being the API and and sort of the rewards you know I I think the demand speaks for itself right and those they're it's monetized and and charged some fees based on that the demand for these checks and pre prerequisites but when you're when you're getting into distributing those rewards and the fees you know are you kinda mentioned you know the first three operators maybe need three checks you know do you distribute that to the operators who are making these calls and then and then kind of what's left over you you paid to the stakers or how are you how how should we think about this in terms of the system um uh of distributing the fees that are paid by the applications with demand for policies"
  },
  {
    "speaker": "Guest",
    "content": "Yep so this in terms of the the fees what happens is the fee would probably be paid in some type of native the native gas asset or some type of native asset now there's different ways we haven't like built out a token or anything so there's a lot of different ways you think about your token model the fundamentally you have a fee that's coming in at the start from that native gas asset now it's a question of okay cool how do you distribute it to operators uh the way we've thought about it is the fees should be going to the operators that are issuing signatures right so the ones that are being used in that system so the first operators that are issuing signatures are the ones who are earning the yield they're incentivized to be as quick as possible then when we think about basically that cash flow waterfall uh the way we've seen it so far is operators either have their own economic security that they have you know someone runs an operator and they're like cool I have you know a large amount of ETH that I'm gonna put into this system or they'll work with LRT's and so in that case what the yield needs to be is proportional to the amount of economic security that they have so in that case once that goes through operators might have partnerships with LRT's and they'll figure out how much do they keep versus how much of it goes to the restakers and then other operators who don't work with LRT's they of course can keep it all to themselves so it just depends on that structure and who is the provider of economic security and we kind of leave that up to them we're not uh we don't have to make that determination all we do is we say as what we just wanna make sure that you have a diversified uh basket of or a diversified set of operators with a diverse set of economic security ideally not from just only one LRT for example"
  },
  {
    "speaker": "Andy",
    "content": "Yeah yeah that makes sense and you mentioned uh you know a couple of precarious situations when when you know why it's so important to to make sure that these operators um are are acting in good faith and and your mechanism to enforce that is slashing but you know in the case of let's say this this uh solver check we're gonna make sure that this intent passes some checks uh and you know maybe the the operator says like oh yeah it's fine because they wanna make some sort of exploit is it enough to to to retroactively or or react to that by slashing the operator after the fact you know in in my mind it's like you know we're gonna they're gonna take the money and go run away with it and then they're and then we're gonna slash them right so how how do you kind of how how do you think about um slashing in in the reactive sense versus the preventative sense"
  },
  {
    "speaker": "Guest",
    "content": "Yeah it definitely becomes more complex you start thinking of the proactive versus reactive uh in this case then you'll have to really start thinking about what is a quorum of signatures that you want uh so in that case it's not you can probably have a a smaller quorum of signatures if you have let's say a uh uh kind of that um that reactive type of model but in a proactive setting your number of signatures your signature issuance your signature your quorum becomes really important your diversity of operators becomes really important you might then at that point and this is still early because a lot of these intent systems aren't up but then at that point you probably will also want to think about making sure of certain requirements for having a distributed network of operators so it's that like you can't have only your your quorum can't be ten or like five or ten operators all from the exact same IP address that'd be a problem right and so you'll have to actually probably require a diversity of operator signatures before a transaction can actually be executed if an intent system so it starts becoming a bit like you know running a blockchain almost right like and I like when you start thinking about those things is what's your network of validators your processing transaction so how do you have a distributed set there how do you know that they can all behave uh appropriately even if someone behaves maliciously or a set of them behaves maliciously how do you ensure that that doesn't wreck the whole system then you start looking at you know the tried the tested tried and true models of crypto economic security as we've seen for L1's uh and the good part here is you're using something like ETH as economic security if we were using our base asset if we were just you know an L1 now of course we're having to think about how do we ensure the value of our L1 uh token whereas in this case you say look ETH is ETH is presumably more robust here than anything else"
  },
  {
    "speaker": "Andy",
    "content": "These are all the fun choices and decisions that application builders get to make um"
  },
  {
    "speaker": "Guest",
    "content": "Yeah I have a feeling that and this is where it starts getting really it starts getting super complex or so I'm I have a feeling that you'll start seeing some consolidation of okay cool here's what we'll do you'll see a few projects spent a lot of time figuring it out and then everyone else will sort of adopt it but the question of course is can we stay unopinionated or if you have like in or like at least promote some type of best practices or some uh some kind of lower boundary for best practices"
  },
  {
    "speaker": "Andy",
    "content": "Yeah I I tend to agree I think we'll see some shelling points and convergences around certain slashing rules slashing contracts certain operator quorums and operator decentralization sets of operators um to enforce certain diversity requirements um and we'll we'll start to see that come out but it's still we're still on the precipice of all this slashing isn't even live yet so it's it's very exciting times uh Nikhil this is a a great presentation could you uh uh I guess just end off by telling people where they can find you um you know how how they uh if they wanna stake uh into predicate how they can do that um and ultimately how how to get involved"
  },
  {
    "speaker": "Guest",
    "content": "Yeah so if they want to get in touch we're on Twitter at"
  }
]