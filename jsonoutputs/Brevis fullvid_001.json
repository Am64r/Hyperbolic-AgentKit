[
  {
    "speaker": "Guest",
    "content": "able to build the exact the same thing of uh uh the dex trading volume discount feature using Brevis. Now, for example, your smart contract will be able to call uh uh a kind of a stop contract or a proxy contract on chain for uh uh you know, uh uh for Brevis, to say, ‘I want to get the trading volume for this particular user.’ And then you know, Brevis will uh you know, the auction component of Brevis will be able to monitor that transaction and monitor that uh smart contract, and then receive the instruction to do the computation off chain. The computation will be done off chain, and then you know, along with the trading volume a proof will also be posted back to the blockchain uh you know, um for the smart contract to record that trading volume. And for example, we have been running um a bunch of hackathons with Uniswap and also PancakeSwap as well, uh for their V4 architecture. In this particular case the trading volume can be stored in a V4 um based hook contract which is essentially plugging for the uh dex. And um you know, after that all future trade for this particular user in the next month will receive a dynamic fee adjustment based on the trading volume of this user in the prior month. So, to do this type of computation uh for a user across millions of transactions on Uniswap it only costs you $.2 like 20 cents, and you know 24 uh seconds in terms of latency. So, you know, Brevis is really production ready and um you know, um able to be used in production. And in fact, like we actually integrated with many of the uh top DeFi protocols and we’ll be launching with some very significant features soon."
  },
  {
    "speaker": "Andy",
    "content": "Well could I ask you a a quick question on the on the previous slide? Yep. As you’re kind of building this present- this this workflow of uh doing some off-chain compute and then verifying that that compute uh on-chain with a ZK proof, um i- it draws a lot of parallels to a ZK rollup where Yep. we can we can push transactions um off of a layer one you know call it a layer two. And then we can verify those transactions back on the L1 uh with a ZK proof. And so I’m curious, what what kind of similarities or differences are there between Brevis’s off-chain computation environment uh, and then verifying that with a ZK proof, versus like a you know a traditional ZK rollup out there right now like a Scroll or a ZK sync?"
  },
  {
    "speaker": "Guest",
    "content": "This is a great question, right? So like you know, uh I think for ZK rollup, uh they are a way to do off-chain computation, but um it is a it is a it is done in a way that you split um the word of e- you essentially have a fork of the blockchain state, right? So like, you have you have your layer one uh blockchain state then you create a separate parallel word in a layer two blockchain. Right? So the layer two blockchain has its own state, has its own persistent state, and you know, it has on its own user and it’s isolated in some way with the layer one blockchain. So it is a way to do off chain computing, but the limitation there is that you still carries a lot of overhead in terms of storage, you still carries a lot of overhead in ter- uh overhead in terms of the EVM, the VM construct that you’re not getting away from that. So like the the EVM itself and the blockchain itself is still fundamentally limiting um you know, how much computation you can run on a rollup. For example, in rollup, you still have the concept of gas fee limit. Right? So the reason you have the gas fee limit is because for whatever transaction you post on uh the layer two blockchain a call data or like some data availability uh you know, guarantee still need to be met and this is where you need to store actually a lot of data about the transactions uh in a layer one blockchain or in a DA solution like a DA, but these places these DA um you know uh solutions and these kind of uh uh you know uh places where you you you store your data availability guarantees are still limiting in terms of the capacity you can actually put, right? So you know, essentially, there’s no way you can scale the computation in a infinite way, because i- in the in the end of day, you still need to challenge the uh you know, computation on-chain and still need to be able to store all this data uh in a safe place, and that is kind of a limiting factor. So, uh layer twos blockchains are good um to to for use cases where you want to actually split the word into two parts where you have a parallel word you have like the entirely separate DeFi protocol deployed on a different layer two, and you have a different ecosystem. But what coprocessor here enables is that you know, it enables you to leverage much much uh much much more powerful computation resources here, because it doesn’t actually split the uh uh you know uh split the state or split the entire word into two parallel words. Right? So basically, uh what um you know, uh coprocessor enables is that it can tap into uh very powerful off-chain computing computing re- computing resources and still after the computing is done the result will be posted back to the blockchain uh where it came from. So, you know, for uh uh rollups it’s not the case, right? So rollups once you have a rollup then you have a bunch of users migrated to there and you have essentially liquidity fragmentation, user fragmentation, application fragmentation, uh but for coprocessors you don’t have this type of fragmentation. You tap into additional resources, and you still keep all the states and all the users on in a single place in a single uh unified blockchain. So this is like uh you know, the difference between rollups and the coprocessor."
  },
  {
    "speaker": "Andy",
    "content": "Awesome. Okay. Yeah that was very helpful, uh feel free to continue."
  },
  {
    "speaker": "Guest",
    "content": "Yeah. So there are many use case you can uh you know, uh use Brevis uh for, um you know, uh from a first principal point of view, like we know there are a lot of um you know, DeFi, is the first product and market fit for uh smart contract based blockchain. So, you know, uh what Brevis can enable uh is um uh something called data driven DeFi or intelligent DeFi. So, uh what this means is basically um you know, you can actually uh dynamically change the DeFi protocols parameter based on individual users’ historical transactions behavior and also the protocol behavior. Right? So things like trading volume based fee discount is one prime example, and also volatility based fee. Right? So if you want to uh you know, have um um if you want to dynamically adjust uh the fee to a higher tier to protect the from loss versus rebalancing. uh if the volatility of the market is high, you can do that uh kind of a based on Brevis's proof of protocol uh uh price volatility. And you can also wrong new kind of reward and incentive programs uh for LPs. Today LPs are receiving farming reward purely based on the time length of their liquidity position deposit. However, that is not optimal for the protocol. We have seen and saw we have seen like many evidence on-chain. There are these kind of a smart LPs who will just like withdraw their liquidity when the market volatility comes. So these smart LPs will receive a lot of farming reward and you know, incentive uh in terms of the protocol token but they’re not actually providing helpful liquidity when the market needs it. So instead of doing this type of time based uh you know, distribution on ongoing basis, what we argue and uh you know, Brevis enables is that we can do this retrospective farming reward distribution based on the LP’s actual um trading fee contrib- contribution to the prot- to the protocol, right? So you can actually see, ‘Okay this particular LP actually uh you know, um helped the ground when the market is volatile and generates a lot of fee for the protocol.’ And therefore um you know, he should be rewarded with more farming reward. So, instead of like based on the time length of the deposit. Right? So this way we can actually um you know, uh encourage and uh benefit a more decentralized LP structure uh instead of just like relying on this kind of smart LP to withdraw and uh you know, deposit liquidity um based on the market conditions. Right? So there are also many other consumer-based application gaming is one very big category of this, right? So if you look at all web two games, uh every single one of them has something called live ops, which is essentially handholding the entire user life cycle based on their user profile. If this user is a high paying user, if this user is uh you know, kind of smaller casual user, um the users experience in the game will be entirely different, but in web three, every single gamer’s experiences are more or less the same, uh because smart contract cannot differentiate it between different user profiles. But with Brevis you can now generate a trust-free proof of user activity historically um you know, and also uh based on their like uh neighboring uh you know uh uh kind of essentially neighboring applications or relevant applications behavior and differentiate the users’ experience directly in the smart contract. And um you know, there are a lot of other infrastructure use cases, such as if you want to auction out your block space, how do you ensure that auctioneer is acting truthfully that it will actually include your block in a certain uh time limit? And these kind of things will also benefit from Brevis’ uh you know, ZK coprocessing power."
  }
]