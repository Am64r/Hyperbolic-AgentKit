[
  {
    "speaker": "Andy",
    "content": "What's going on guys? Welcome back to The Rollup. Today we have a presentation from Amrit Kumar about restaked rollups. Um, particularly interested in this one. I had a look at the slides. There's a lot of technical diagrams. I know I'm going to have a lot of questions so excited to dive in. Welcome on. Amrit, it's good to have you back."
  },
  {
    "speaker": "Amrit Kumar",
    "content": "Well, thank you Andy. Good to see you again."
  },
  {
    "speaker": "Andy",
    "content": "Sweet. Well, let's jump in and learn about restaked rollups then."
  },
  {
    "speaker": "Amrit Kumar",
    "content": "Yeah sure. So um, to give a quick context on why we started working restaked rollups, right? So uh for those who are probably new to restaked rollups, you might know AltLayer from its SaaS services, right? So, we have helped a lot of companies who wanted to have their own roll up. We have a, you know, across for example, OP Stack, Arbitrum, Orbit, by the way, unfortunately, I never got the AltLayer merch so I'm using Arbitrum merch here."
  },
  {
    "speaker": "Andy",
    "content": "No."
  },
  {
    "speaker": "Amrit Kumar",
    "content": "So anyway, so uh, yeah the idea is basically that we were helping people who wanted to have their own rollups. And uh we were the one kind of running those notes so that developers would focus on building their own code dapp and would not have to worry about any of the infra stuff, right? We would handle any of that. So um, one common feedback we're getting from all these clients say, \"Hey, it's good that you manage the services for us but there's no way for us to get our community involved, right? You are the one running the vendor. So, you are the vendor, you're running the my rollups. I will probably build my dapps but that's it. There's no way for us to get the broader community involved in running and managing the rollup. And how could we do that? So this is, this was, I would say, the initial motivation behind something that makes the system more decentralized. Something that makes the broader community get involved in a rollup, right? And as the title suggests, restaked rollup is something that brings restaking to rollups as simple as that. So, basically, bring EigenLayer's restaking mechanism to rollups and offer certain services. So um, why are we talking about any of this, right? So, first of all, I mean this is something probably, you know, we have gone through a number of times already but I think it's still good to give a little bit of context on why we're talking about this, right? Because, you know, um when Arbitrum, Arbitrum, and Optimism were running about, I think, 2021, they were doing about 50k, 60k transactions a day. So, it was very early days of Ethereum uh, sorry, of Optimism and Arbitrum on L2s when we started as SaaS service. But since then things have changed dramatically since the launch of OP Stack. And OP Stack got launched. Arbitrum Orbit got live and then Polygon CDK. Now, zkSync has its own stack. A bunch of other rollups are out building. I mean, you probably would know there's now a base stack coming up um you know, through, built by Spire Labs as well. So now there are different kinds of stacks being built. And what has happened through that is now it has become as simple as deploying a bunch of contracts to be able to have your own chain up and running. This is very different from let's say, Cosmos style chain or Polkadot style chain when we, you need to find hundreds of validators to run this. So one rollups are much easier to spin up. And with the advent of, let's say, OP Stack and all the stacks or with the advent of SaaS providers like ourselves, I would say it has become 10X or 100X easier to launch a rollup. And, and because of that, what has happened is, we are seeing a bunch of rollups being launched. Right? Every single day, you would see at least one or two rollups being built in stealth. We ourselves have onboarded at least 40 clients across testnet and mainnet, across all the stacks. And then of course, we are the only one, only one of the SaaS providers. There are, you know, five other providers as well. So I think it's quite likely to say that there would be at least 1,000 rollups by end of 2024. And we probably are about 300 or something close there. Um, now what happens when you have so many rollups, right? You have some problems. First of all, uh if you look at some of the established ones like Optimism and Arbitrum, they're run with this centralized sequencer model. It's kind of fine uh for several reasons. One is because in the end of course, there are certain issues with centralized sequencers around liveness, you know, in terms of uh censorship, in terms of MEV extraction and so on. But because these sequencers are run by established foundations like, you know, OP Labs or Arbitrum Foundation, you kind of trust them in some way. You kind of trust them that they will not do anything malicious. But that won't apply. This, this, this idea won't apply to rollups that are being launched by arbitrary anonymous dapp developers. They could actually take OP Stack, fork it, insert something malicious into it, and be able to kind of steal funds if they wanted to, right? So centralized sequencing kind of works with established rollups because you kind of trust them, but it doesn't work for a long tail of dapps that may emerge through OP Stack and some of the stacks that we come out."
  },
  {
    "speaker": "Andy",
    "content": "Yep."
  },
  {
    "speaker": "Amrit Kumar",
    "content": "Um, yes. So, you, you have a question, Andy?"
  },
  {
    "speaker": "Andy",
    "content": "No, I just I, a couple of things. First is on the, on the SaaS point. I think like um many of, like, the SaaS providers are probably are basically figuring out that SaaS doesn't provide any network effects um in the sense that like there's not, there's not something there that is like, not super commoditizable. So like, moving away from that I think is what we'll see. And then um I, I also just put out a tweet saying I think there's, there's also not only are centralized sequencing are the norm now and that there are some, somewhat okay with trusted stacks. Um, there's also kind of a lack of incentive for the larger rollups to actually move away from that. True. Um which is kind of problematic. Um, but like, I don't know, that's, that's a very, kind of, hot topic. True. Um, but yes these are, these are some of the issues for sure. Um, and I think the other like, biggest one here uh is the composability but I'll kind of let you get to that. Yeah. Uh we actually just had a really fun podcast uh about app specific sequencing yesterday um, which was like, quite interesting. So, yeah, I'll I'll let, I just wanted to make those points."
  },
  {
    "speaker": "Amrit Kumar",
    "content": "Sure, of course. One of the, very valid point. So yeah, I mean, sequencing is of course a major problem that, I know, there's all sorts of debate going on. But there are, there are other problems as well, right? For example, if everything goes on Ethereum, you wouldn't have to worry about, you know, let's say, finality time and things like that and how do you withdraw from this L2 to L1 and those sort of things start to become more prominent, right? Um, so especially in case of Optimism rollups, you have to wait for this withdrawal period. Even case of zkSync or some of the zk rollups. Just for safety reasons, they have inbuilt some sort of a withdrawal period in some cases, right? So even for example, in case of zkSync mainnet, you cannot withdraw instantly. There is a withdrawal period. It's not necessarily because of the stack or because of the tech, it's mostly because they feel like the tech is still relatively new and so it's good to push, put some, some buffer period, right? And then of course, uh because you have now these hundreds of rollups, you need to be able to figure out some way to kind of interop, right? And you could do that initially on L1 but you can't do that, you know, synchronous way, you know, straightforward manner through, through, through rollups. But of course, you know, there are work being done there. And then of course, there are other problems but, but basically there are, some of the problems you would see if you, if you were to have thousands roll ups immediately, I'm going today. So, where does the restaked rollup fit in, right? So, basically, it's a, it's a framework that we've designed which is designed in a modular way and I will come back to what I mean by this modularity here. But basically, it's a rollup that takes a certain stack like OP Stack and gives them certain kind of AVSs that helps them with different things. So for example, you could imagine something like, let's say, Arbitrum, right? Um, today, Arbitrum has fraud-proof enabled, right? But the problem is that the validators set that is allowed to get involved in challenges and things like that, it's permissioned. Now they're building this thing called Bold, right, that allows anyone to become a validator. Anyone can potentially become a challenger. But that would assume that you have a network. That would assume that you have some number of nodes that actually observing the network and challenging in, if needed. And you could do that for example, using something like an AVS, right? So once you have a restaked rollup, you have this rollup, but you have this Bold-like framework that allows you to do challenges for your roll up. So restaking brings that kind of network for challenges. Restaking brings a way to faster finalize your transactions. It also gives you a bit of security. For example, in case of let's say decentralized sequencer set, right? So, you could have built an AVS that is not necessarily shared. It could potentially, it's not like a special, where it's shared across all the rollups, but could be your own specific sequencer set. And that gives you security and decentralization for your roll up, right? And lastly, it brings restaking to rollups. That's also important because to build these networks, you need to be able to borrow security. You don't want to launch your own token and build another Cosmos style chain. So restaking helps you in borrowing all that security in as much easier way. It helps you bootstrap that security quite quickly. Uh what is, what is really important is that we try to minimize, as much as possible, the changes that have to go to the underlying rollup stack. Okay? Because the problem is that if you change too much, it diverges from the initial, initial let's say stack code base, and then be very difficult to maintain. Right? That's one of the criteria. So for example, let's say if you are looking at Superchain or OP Stack, uh Superchain may build, or Superchain actually is building some sort of interop solution at, at the moment for all the Superchain rollups. And if you make too many changes to the underlying stack, then be very difficult to be able to tap into all the benefits that Superchain gives you. So, we try to minimize that as much as possible. Yeah, go ahead. Go ahead Andy."
  },
  {
    "speaker": "Andy",
    "content": "Yeah, I was just going to say um, the, the way that you described the restaked rollup is that there is, this, basically, that the AVS um aspect of it is, is the restake."
  }
]