[
  {
    "speaker": "Guest",
    "content": "agnostic. You just point to the LP where you deposited. Now in this case, it's nice because whenever I make that claim on chain, the system can go and check, hey, what was the IL? Okay, cool. This is the coverage that the guy needs to be able to claim. So then you don't need that third party. Um, but in some cases, you know, third parties are required for for off-chain stuff. Because one example could be, you know, if if there's a look, you could assume that a money market gets exploited when a lot of its funds disappear, right? But at the same time, someone could do a flash loan to withdraw all of the funds, then say, hey, there was an exploit, but then the system triggers on chain. There is an exploit because all of the funds disappeared, and then it pays out. So that's a case where you don't want something like that."
  },
  {
    "speaker": "Rob",
    "content": "You don't necessarily need a token, right? You could use an oracle of if I mean, you could treat your own token as the government system, and and use the oracle that way. Treat that as the oracle or you could just plug in your own that would tell whether a dispute has happened."
  },
  {
    "speaker": "Guest",
    "content": "Yeah, correct. So you can either do it centralized, or I can obviously, like, use fees from the system to hire a team to do it, or you can, you know, get volunteers, which I think is dangerous. Um, the the the, uh, it it it all depends on your spectrum of decentralization, right? Like at its base, I can do it. Now, one more removed is, okay, cool. I'm not doing it altruistically. I need to get paid for my time, so we add fees, right? Um, so now instead of the LP getting 100% of the interest rate, I'll take 10% cut. Okay, but now, all of a sudden, okay, now we have fees. Let me hire a team. Okay, so that's sort of the next stage because now it removes my, um, centralized, you know, component. But now at the next stage, you're like, okay, but let's make it user participants, which has its own red flags because now, as a user, I can deposit a lot of money. Now I have a big say in the in the vote, and now all of a sudden, I decide there was an exploit, then other people can't override me. So, so now at the most decentralized stage, that means that these guys need a something-at-stake problem. And now all of a sudden, you come to a standard, you know, simple proof-of-stake model, and you have a token."
  },
  {
    "speaker": "Rob",
    "content": "Interesting."
  },
  {
    "speaker": "Guest",
    "content": "So so tokens to me are the absolute of decentralization. Um, people nowadays don't understand that. You know, they they see a token as somewhere lower down here on the spectrum where it's like part of the team, and it's just not the case. So I mean, as as as I'll, uh, we we'll see where it ends up on that scale, you know? It'll kind of start with the fees, and then kind of with a team, and we'll see if it moves along, but but I'm I'm going a lot more pessimistic this time around when it comes to my belief in decentralization and humanity as a whole. Um, because my last few cycles showed me that that people act more irrationally than I can ever plan. Um, and for that sake, you know, I can't start with any like absolutist ideals on what decentralization or immutability even should like like these parameters will will be the first ones that I'll be deploying with, um, proxy patterns, just because, you know, I I don't even trust immutability anymore when it comes to how users interact with these systems. Um, Levex also builds off of a money market. I don't think it's something we've seen before, and again, use that money market model. So, so you can do this right now with something like Ave or Compound, actually, right? Um, let's say I want to go long, um, uh, uh, BTC. Right? So I'll take I'll get a bunch of Bitcoin. I'll deposit it as collateral. I'll, and I want, let's say, 3x leverage, which means you need about 75-ish, 80% LTV. So, I'll borrow a bunch of USDC against the BTC I just deposited. I'll go swap that USDC to BTC. I'll put the BTC in again as collateral. I'll do that another time, and now I have a 3x position that is a BTC long with a USDC short with BTC as collateral. Um, this really just automates that whole process, and it means that, you know, anything that's accepted as collateral, you can use as margin. Um, margin can be different from collateral, you know? So in the above case, my margin could have been 1,000 USDC, but my collateral is the BTC, that's part of that wrapping process. And if you look at, you know, perp interest rates, that's really the difference between my my long and my short positions, and in this case, you know, the amount of USDC borrowed, that's the premium people are paying for that short position, and the interest being paid on BTC, that's the interest for their long position. So money markets already do that. It's really just changing the UX in the flow, and and facilitating that swap to happen without slippage. That's a big one, you know? Because otherwise, you need to go to an AMM and exchange the USDC for BTC. So in this case, that happens on on the on the money market itself as an atomic level where it's just exchanging it at the oracle prices with a small fee, and then your your perp interest that you pay or, um, get paid, um, funding rate as they call it in perp technology, that's just the difference in the interest rate you're paying for the borrowing asset versus the interest you're being paid for the providing asset. And then you have on-chain perps, you know, with spot perps that are whatever leverage based on the LTV, and you can put whatever margin you want. Um, that one That one primitive."
  },
  {
    "speaker": "Andy",
    "content": "And will you guys be able to do an order book there, Andre?"
  },
  {
    "speaker": "Guest",
    "content": "Uh, yeah. Will it do an order book because of of Sonic?"
  },
  {
    "speaker": "Andy",
    "content": "You can. You can. Okay."
  },
  {
    "speaker": "Guest",
    "content": "So one of the things we'll also be showing is order book-based trading instead of standard AMM, so standard clob. Um, this is something we we actually already had ready at Phantom, but we didn't want to deploy it there because if it gets a lot of activity, it can drive up the fees, but in Sonic, it doesn't. So it's it's pretty straightforward to do it there. Um, it's not needed for the primitive to work, but I do think it's a nice little value add on top of it. Um, Witness Net, I don't know if I've mentioned that one. Um, I'm trying to remember what I said in the tweet."
  },
  {
    "speaker": "Andy",
    "content": "It was FX. It was FX-dash-swap and Blockchain Hero as well."
  },
  {
    "speaker": "Guest",
    "content": "Uh, okay. FX Swap one is actually easy. That's that's a new volatility-based AMM curve I came up with. Um, so stable swaps, you know, you've got sort of at the x3y plus y3x, and then at the full extreme of 100% volatility, you get, um, x times y, which is the Uniswap one, x3y being the Solidly one. And this one adjusts between those two curves based on the on-chain volatility of the trades happening. So if it's stable swaps, you know, it'll naturally gravitate very low volatility and end up at the x3y. If it's super volatile or even just during a period of time super volatile, it'll move towards the x3y, but then for like closely correlated assets that trade somewhere at like 10 to 15% volatility, it'll trade closer to the x3y than it does the xy, but still enough on that curve, so that you still have the correct pricing. Um, so again, pretty straightforward in my mind, but you know, x3y was also pretty straightforward in my mind, but people aren't building this stuff. A big reason, actually, even with yearn, why I didn't build stuff is I used to think of something, and then I'm like, nah, that's too easy of an idea. Someone would have built it, but it doesn't exist, so obviously, it wasn't successful, and then I just never built stuff. But I I really think builders when they get an idea, just build the bloody thing, you know? You'll, some will be successful, some will be failed, but you'll be amazed how many times I have shot down my own ideas because I'm like, nah, that's too simple. Why has no one done that yet? Obviously, someone should have done that yet. This is another example of that. Witness Net is a bigger one. That's, uh, that's, uh, um, fully decentralized ZK oracle for arbitrary requests. Um, so you you you, the the the little bit of code that's encapsulated with the circuit that anyone can run, um, you give it a HTTPS request that, unfortunately, has to be HTTPS because I need those certs to be able to identify the the the key chain that occurred. It then calls that request, and and it does a handshake with that session so that it gets all of that session data. Then it returns the whatever it was from the HTTP request, you know, whether it's HTML or a Jason blob or whatever. It doesn't really matter. Um, and then it uses the session keys along with the handshake along with the, um, the the the the encrypted transfer that happened that proves that this bunch of encrypted packets is this bit of data that you received, and then it runs all of that stuff through a circuit to prove that those session keys were in fact belonging to that session that did use third encryption to prove that it is this data. And then you have a URL, you have a data blob, and you have a, um, ZK proof that you can submit on chain to prove that this data did come from that URL."
  },
  {
    "speaker": "Rob",
    "content": "This is to prevent, uh, like fraudulent user interfaces and, uh"
  },
  {
    "speaker": "Guest",
    "content": "Well, this is for anything. So so so so I believe that the current oracle pattern is wrong. Um, you know, right now, if I want to use, let's say, a weather data, right? I'm gonna go to I'm gonna go to Chainlink, and I'm gonna be like, hey, guys, I need this weather data. Can you please collate and collect this? Um, a lot of new dapps might not have that kind of power, and they don't wanna, you know, need to be the centralized entity. So this thing, they can run on their client-side code, you know? You can chuck this in your little web app or however people are accessing your thing. So then the client while they and and then the other thing is, I I feel oracle update should happen during the transaction, and not just continuously on chain. So if you're looking at pricing updates, you know, that's just happening whenever. It's not being triggered by an event. Meanwhile, if the price changed, there will be someone who has an incentive to update it on chain, you know, whether it's a bot that wants to liquidate or a trader or someone at a money market."
  }
]