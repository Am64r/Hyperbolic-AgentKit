[
  {
    "speaker": "Guest 1",
    "content": "Um, another thing I would, I would mention about the composability part, because, is because I I I'm a hundred percent agree that the composability is a very important, uh, aspect of, uh, uh, DeFi. And, uh, I do believe that, uh, obviously, I don't have a number on my hand, but I do believe that, um, some lack of composability may result in, let's say, uh, some reduced, uh, uninformed flow, uh, now since, now people may not be able to create a bundle very easily and they'll be able to execute certain batch of transactions in, in, in atomicity. However, I do want to, um, kind of point out that, that sure, composability might be a problem. But, it's not an unsolvable problem. Meaning that, there are certain solutions out there that potentially can be leveraged, um, for better composability for us. So, um, just to kind of give a context, like, uh, in terms of what we can do to, to, to tackle this issue. Um, one approach that I'm personally quite interested in seeing is, uh, specific to the, the, the transaction of, this big transaction bundle that we are crafting with, uh, application specific sequencings. If we can achieve some levels of, uh, builder commitments, uh, by having, let's say, uh, the top, let's say top three builders, uh, be partaking in giving commitments on certain transaction ordering or combinations with our bundle, then we will be able to essentially, uh, provide, uh, a level of composability that is, uh, uh, maybe perhaps it's economically guaranteed or perhaps it's, uh, some sort of commitment, uh, based on those, uh, builders agreeing to say that, okay, if you pay me this premium on this, I will be able to provide you, uh, atomic composability between your bundles and some other extra transaction that are outside of, uh, uh, uh, uh, Solare protocol. So that is one possible way by builder commitments, that we can provide some levels of atomic composability. And another approach that, uh, I think some people might be also discussing about, uh, in, in, in some corner of the, uh, uh, uh, the room here is the, um, the share sequencer. So I have also, uh, come across few folks who are actually, uh, interested in exploring how the share sequencer may also be able to tap into this, uh, uh, ass, uh, paradigm and then be able to provide, uh, a full atomic composability between, uh, different apps that are also running, uh, with, uh, app specific sequencing, uh, in a similar fashion. So, yeah, in general they are like, those two, uh, two areas of explorations, uh, specific to composability issues that I'm quite interested in, uh, seeing how it would, uh, develop in the, in, in the future. And I think both of them are still, uh, quite early, but both have, uh, different teams that are exploring and working on solutions to, to kind of build this out in production as well. So, I'm personally quite, uh, excited to see how this space would evolve and potentially help, uh, projects that are us, um, based, and make them more composable across non-ass and ass-dapps, uh, uh, as well."
  },
  {
    "speaker": "Rob",
    "content": "Awesome. Well, uh, I, I think what we're looking for here is, is, uh, ass composability. Um, this is, this is kind of the best of both worlds. If it's possible, uh, then we're able to maintain the uninformed flow because Alex, you kind of posited that, uh, uninformed flow really values composability. Um, and that's a main value proposition. To the uninformed flow. Uh, and we can maintain that if we have composability. Um, but if we have ass, we can lower LVR and that way we're, we're able to bring down LVR, we can maintain, we can maximize the uninformed flow. Um, but right now in, in the current state of ass, we, we don't have composability. Um, we, we have some fragmentation unless ass is done in some certain ways. So, um, I think this is, this is sort of where, where it's left, uh, in this current state, but I do have one, maybe one or two more follow-ups which is, uh, we recently had a podcast with Justin Drake. He was very fair, favorable when it came to composability and, and this is like a very key value proposition of Ethereum. Um, but also very frankly bullish on, on Solare and the way that it, it rebates LPs. Um, and incubates that from leaking it, uh, leaking MEV back to validators. And so, one criticism was that, uh, currently, uh, ass and Solare is kind of dependent on, uh, the next, it's dependent on Uniswap V4, uh, hooks which is dependent on, uh, the next Ethereum hard fork. And so I was curious, maybe we could sort of just unpack like, what is kind of like coming up in, in the next, you know, on the roadmap of Ethereum, maybe in the next hard fork, that gives way to this new, this new mechanism which empowers, uh, Uniswap V4, uh, hooks and, and downstream empowers Solare to rebate LPs. Uh, what is it that, that is in this next Ethereum hard fork that is key to this mechanism?"
  },
  {
    "speaker": "Guest 1",
    "content": "Yeah, so I believe that, um, um, right now we're, uh, like, yes, so we have few, uh, dependencies there. Uh, one is obviously the V4. And V4 itself also has some dependencies, um, as well on the next upgrade. But, I think, like, specifically to our side, I believe our dependency on the Eth upgrade isn't as significant, I would say. Like, um, to the extent that I, for example, like if, you know, uh, there were some reason that somehow, you know, uh, they have to, um, fix up some of the roadmap. Uh, as long as the V4 can, uh, ship, uh, like, uh, without any issue, I think we should be, we should be okay.  Um, so I believe our dependency on that side should be, uh, not too big of a, uh, concern. Um, however, one thing I do want to, uh, sort of mention, is that, um, I think in general, like, uh, we are very conscious of like, how we would like to, you know, uh, position and also, uh, build our, uh, sort of like the liquidity, uh, ecosystem on top of, uh, Uniswap, uh, because I think Uniswap are taking a very heavy lifting by building this whole, sort of like a new AMM stack, in itself, has a lot of gas optimization that are at the same time enabled, um, by the next upgrades, um, and some of which are enabled by next, next upgrades on Ethereum, um, that are beneficial for every single user who are trading, uh, based on the hook of the V4 protocol. And, and to that extent, like we're like very, uh, excited about, you know, the fundamental difference, fundamental changes that are, it's brought by, brought forth by Uniswap before, uh, that would, uh, hopefully also translate to better, uh, user welfare, uh, trade execution for, uh, users, using pro-protocol, uh, like ours."
  },
  {
    "speaker": "Andy",
    "content": "Yeah, I think, I think, um, uh, Alex pointed out just quickly, that I think it was actually some of the previous upgrades, um, that enabled some of these technologies. And so kind of looking forward to seeing that, uh, come to light. And for, for my understanding of application specific sequencing as well, uh, there's kind of, there's kind of, I wouldn't say an on/off switch, but there's a way in which that you can segment which parts of the application you want to be, uh, uh, uh, sequenced in your app or sequenced by the global, whether it be a sequencer on L2 or the Ethereum validators. Um, Alex, I'm curious if that concept changes your perception at all or kind of has influenced your thinking. And then kind of on the downstream of that, if we see a lot of kind of application specific sequence apps, that have that, that property or have that property..."
  },
  {
    "speaker": "Guest 2",
    "content": "Look, I think it's an interesting design space for sure. So I very much appreciate the work that all of the teams are doing uh, with, uh, application specific sequencing and with shared sequence, and all of that. It is that eventually when you have two apps, both of which want to, uh, both of which want to sequence their own transactions, you will inevitably run into a situation where one wants them in one order, and other one wants them in the opposite order. And then there is the eternal question, what do we do next? And who ultimately decides to um, to, uh, pick the order, right? So we know that validating..."
  }
]