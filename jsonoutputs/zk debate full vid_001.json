[
  {
    "speaker": "Guest 1",
    "content": "the high level structure of my high level high level uh just of uh my thesis"
  },
  {
    "speaker": "Andy",
    "content": "Cool Now I'm going to pull up Uma's and then we'll kind of take the tweets down and just have a more kind of fluid conversation um So Uma you went in and responded um Which unfortunately I mean unless you want to hear me do another monologue I think that we'll just pass on that one but maybe you could also kind of summarize your key points here um and then we can kind of kick this off"
  },
  {
    "speaker": "Guest 2",
    "content": "Yeah for sure So I think uh for some background it's maybe helpful to even talk about my personal experience with ZK circuits versus ZKVMs So you know for around two years ago like I was writing a lot of custom circuits I was using languages like Circom like Plonky2 um which is more of a framework than a language and writing custom circuits for in particular a lot of light client use cases like a ZK Tendermint light client And we wrote a lot of circuits it took a really long time um it took like many months to write them it took um many engineers it was very difficult to audit and in the end we were pretty happy with the performance of our circuits I think it was like you know the proof generation time took like 10 minutes or something like that um And so that was our journey with ZK circuits Then we built SP1 And with SP1 I think like our intern or something wrote the Tendermint light client it took an afternoon it was like 50 lines of code um the proof time was actually really really fast it was several minutes instead of tens of minutes and then the proof cost was also a lot cheaper instead of being several dollars for proof it was like a few cents for proof And so I think my personal experience with the ZKVMs is that it's been better than custom circuits in literally every single dimension Like the developer experience is like a 100x faster The proofs are cheaper um The proof generation time is faster um And overall like the maintainability the auditability the customizability is like unparalleled So I think a lot of my thinking around why ZKVMs will totally dominate ZK circuits even in the long run um is born out of this personal experience um And yeah maybe I can talk later about you know why I think that trend will continue for a long time um but yeah I think that's like kind of the Well that's like one data point I guess um that you know I think it's really illustrative of like a real world example with these two different technologies"
  },
  {
    "speaker": "Rob",
    "content": "But I mean basically like let let's open up the floor So Vonashree if you'd like to respond and then maybe we can go back and forth a little bit on Yeah these two competing theses"
  },
  {
    "speaker": "Guest 1",
    "content": "I think the amount of like I like I said the amount of advancement we have had in ZK space it was even unthinkable Uh even before uh all SP1 ra zero uh doll Nexus um again all these projects started I I I am even guilty of the of of the fact that uh of the fact that uh I thought that it may not even be possible To build a ZKVM So I actually am very um stunned by the amount of uh amount of uh advancements that these teams including Uma's team has done um Again I think the the the the there are bounds of my statement right my statement doesn't even uh contain doesn't even contest any of this My statement actually goes to a specific situation where the the the engineering time is so small the um the uh the results you can get by by uh the the results on improving time uh you can get by uh applying ZKVMs now uh in comparison with the ZK circuits that have been built in the past um might be a lot better Here all this completely acknowledged Still my point remains that as a project grows so big So big that it touches the light touches lives of billions of people At that time at the time and and also at and also for a project where performance is critical Right there can be projects where performance is critical there there are pro there are too many there are very many Whenever you touch the entire Right People are working with limited resources Phones even Nokia phones old phones not able to generate proofs on them um uh not having enough memory to even complete the proof let alone however long it takes These are all the constraints right When these becomes become the constraints And when a project grows to that level of maturity the focus becomes competing there there won't be typically one project there will be multiple projects and they will compete uh People will say 1 minute against 95 seconds Uh one one minute against uh 55 seconds and it even milliseconds even one byte of data uh uh difference can become the uh the the the coarseness in which people um projects projects can compete So when that becomes um uh uh center stage for projects there if it is the case that custom circuits can perform better than ZKVMs I don't see projects holding back from putting together a cryptography team of let's say 10 uh amazing cryptography engineers working on ZK circuits for one year That won't be a problem because cost isn't a problem at that stage Time to market isn't a problem at that stage because this these projects have already got around this problem through the use of ZKVMs um And uh and there there are uh Uma rightly mentioned some important advantages of ZKVM such as auditability such as uh reusability of the code uh here are some here are some important points uh related to that right one about auditability um when we are already So I I'm actually very skeptical about I'm actually very um cynical about the way audits currently are looked at uh in the ZK industry specifically and for the following reason right what when you audit What is the you need to get some level of assurance after the audit right And that level of assurance should align with your main goals the main goals for a project for for example some somebody's uh is is building an application to transfer money from one party to another party and they're using ZK They They want to make sure that nobody's uh nobody that this money doesn't get lost for example or people are not not going to uh not going to mint extra tokens out of thin air without getting detected These are these are the constraints of that project The audit the results of the audit should directly transform somehow easily inferable um the the results of of of the audit should somehow connect with the goals of the project and um So con contrast that with the current state of ZK the current state of ZK is that we are going at a breakneck speed We um we are going at a breakneck speed that it at such a speed that we we uh rightfully don't have the time to peer review all the security results of uh security analysis of for every ZK um advancement that happens and how those security properties relate to the security properties needed by the application and the these are not just theoretical right Take for example what happened in Zcash in Zcash because of the bug that that there existed what um what it implied is that anybody could um mint fake Zcash out of thin air and nobody could notice right these are real issues right um And uh and and that is coming from an amazingly strong cryptography team I think I think that's one of the most amazing cryptography engineering teams there exist um and still there was a bug And uh and I think we have a long way to go in terms of or audits making um audits uh being of a great uh of of of significant value to applications that are using ZK systems um So there's that point I'll I'll I'll I'll leave it there um right I I think uh to summarize my points are that there are various there are various advantages of ZKVMs but when it comes to the bounds of my argument I think whenever custom circuits do make sense um the advantages of ZKVMs the uh extra auditability etc will become minimum"
  }
]