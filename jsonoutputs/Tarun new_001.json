[
  {
    "speaker": "Guest",
    "content": "because they’re getting token rewards, points, future rewards, some type of fees, something where they’re making money, right? Like that’s just the baseline."
  },
  {
    "speaker": "Guest",
    "content": "And if you assume that, then maybe you can be less collateralized. Like maybe you can actually have a a safer network with less collateral."
  },
  {
    "speaker": "Guest",
    "content": "And, um, what we showed was something that’s like as long as there’s not too much overlap,"
  },
  {
    "speaker": "Guest",
    "content": "So like say you have two AVSs, as long as the sets of node operators and the amount of stake they have don’t overlap too much,"
  },
  {
    "speaker": "Guest",
    "content": "then you can give them AVS rewards or fees"
  },
  {
    "speaker": "Guest",
    "content": "at a certain rate such that these cascading attacks don’t occur. So it says like with incentives you can actually lower the collateralization a lot."
  },
  {
    "speaker": "Guest",
    "content": "And so what that meant is"
  },
  {
    "speaker": "Guest",
    "content": "It tells you something about how AVSs should think about designing their incentives based on"
  },
  {
    "speaker": "Guest",
    "content": "how much their node operators overlap with other services. So, there’s kind of this trade off, right? There’s"
  },
  {
    "speaker": "Guest",
    "content": "I get a lot of capital efficiency as a node operator if I can use the same capital at a million services."
  },
  {
    "speaker": "Guest",
    "content": "But then I create a ton of risk."
  },
  {
    "speaker": "Guest",
    "content": "And so,"
  },
  {
    "speaker": "Guest",
    "content": "you know, the the way to have no risk is a node operator only validates one service, but that’s not efficient, right? And so there’s kind of this in between, and and what our paper shows is like there is, how how do you compute what that in between is, that’s safe."
  },
  {
    "speaker": "Guest",
    "content": "Um,"
  },
  {
    "speaker": "Guest",
    "content": "It’s still somewhat pessimistic, so like, we’re, I’m working on another paper that’s like giving a a better bound, but hopefully that gives you kind of like a a long story, but that hopefully gives you an."
  },
  {
    "speaker": "Rob",
    "content": "Yeah."
  },
  {
    "speaker": "Rob",
    "content": "I, it does and I think it also says something about like how we, you know, you start pretty conservative but then you can kind of hone in on like more accurate and"
  },
  {
    "speaker": "Rob",
    "content": "hopefully more optimistic results."
  },
  {
    "speaker": "Andy",
    "content": "I have a question about,"
  },
  {
    "speaker": "Andy",
    "content": "um, the way AVSs ought to think about how much API or fees or rewards or incentives they should give to to the stakers and those who are committing economic security."
  },
  {
    "speaker": "Andy",
    "content": "Is this something that AVSs should coordinate with other AVSs on, and and we should have a globally coordinated system for evaluating this,"
  },
  {
    "speaker": "Andy",
    "content": "or is this methodology something that a particular single AVS can use to value economic security for its own state?"
  },
  {
    "speaker": "Guest",
    "content": "Yeah, that’s a good question. So,"
  },
  {
    "speaker": "Guest",
    "content": "by the way, in in response"
  },
  {
    "speaker": "Guest",
    "content": "partially to these papers, partially to other things, partially to stuff that AVS was wanted, Figment created a new security model"
  },
  {
    "speaker": "Guest",
    "content": "where instead of it just being purely the node operators choosing using stake, the, uh, services could demand something of the following, which is like, suppose I want to to put a hundred ETH into one AVS or service."
  },
  {
    "speaker": "Guest",
    "content": "Sorry, someti-, I I like calling them just services, ‘cause it’s just like simpler in my head than AVS"
  },
  {
    "speaker": "Rob",
    "content": "So they are."
  },
  {
    "speaker": "Guest",
    "content": "Same thing."
  },
  {
    "speaker": "Guest",
    "content": "Uh, and and uh, sometimes you, you know, you wanna put a hundred ETH into a service, the service has no"
  },
  {
    "speaker": "Guest",
    "content": "in in the original model, the service didn’t have any ability to guarantee that they could slash you. So like, what I mean by that, suppose you put the hundred ETH and you’re validating service A, and then you’re also validating service B with the same, uh, thing. Now, suppose service A wants to slash you because you did something wrong,"
  },
  {
    "speaker": "Guest",
    "content": "and the other operators agree on it. But now suppose service B does sort of an MEV thing where it slashes you first."
  },
  {
    "speaker": "Guest",
    "content": "Now service A can’t slash anything. So it can’t, it can’t cause any penalty. So like you, you don’t get any penalty for doing the bad action."
  },
  {
    "speaker": "Guest",
    "content": "And so there’s sort of this idea that"
  },
  {
    "speaker": "Guest",
    "content": "uh, service A has no guarantee on how much it can slash, right?"
  },
  {
    "speaker": "Guest",
    "content": "But the new model, for Figment security, which has this concept of unique stake, it says that, hey, if I give, a hundred, intuitively, like the math and the code don’t exactly do this, but I think this is a broad, a simpler way of, of, in-, intuitively understanding, is like"
  },
  {
    "speaker": "Guest",
    "content": "A service is a contract, and the contract says, if you delegate a hundred ETH to me, ten percent of that ETH is reserved, and only I can slash it."
  },
  {
    "speaker": "Guest",
    "content": "Which means that I can always slash at least ten ETH"
  },
  {
    "speaker": "Guest",
    "content": "as a service, at Figment."
  },
  {
    "speaker": "Guest",
    "content": "And so what that means is that, it allows you to kinda have some amount of isolation, and and we’ve seen this in lending and perpetual markets where inevitably like the pooled model works really well for efficiency, but then is hard risk-wise, and then you, you, you kind of have a hybrid model between fully pooled and isolated, uh,"
  },
  {
    "speaker": "Guest",
    "content": "where like, only one asset can be borrowed or lent, right? And and you can kinda view this unique stake thing as,"
  },
  {
    "speaker": "Guest",
    "content": "Hey, I am contributing my capital to an AVS to earn yield to, to operate it, to make it work."
  },
  {
    "speaker": "Guest",
    "content": "Uh, and in exchange the AVS gets to guarantee that I can slash at least some fraction of my stake, and pays me fees for it, right? So,"
  },
  {
    "speaker": "Guest",
    "content": "this unique stake thing is actually, uh, quite important because it actually means that it lowers the cost quite a bit for the service. So, sorry, I know this is a long-winded answer to, to your question, but it’s actually quite important because it actually, it’s a parameter the service gets to choose. So the service can kinda think of like, Hey, I’m a really, I I really need to be able to, in the worst case, slash completely the user, then I say I have a really high unique stake. Like, maybe I’m a rollup sequencer where the damage that can be done by an invalid sequence is arbitrarily large."
  },
  {
    "speaker": "Guest",
    "content": "On the other hand, you, you could consider an AVS that’s maybe more like an oracle, where it’s like, Okay, well, if I only move the price by one percent, then the damage I can cause is one percent times the current ETH price or something. Like like you have some way of valuing it. And for those you might say, Ah, I would rather be more capital-efficient and have more shared state, right? And so I think because of this, and this is inevitable, right? Each AVS will have its own demands for security versus not security."
  },
  {
    "speaker": "Guest",
    "content": "Um,"
  },
  {
    "speaker": "Guest",
    "content": "versus like, less security rather. Not not security."
  },
  {
    "speaker": "Guest",
    "content": "Uh, and, and because of this, they will have their own parameters to adjust, that are their own, which are like, how much stake, unique stake do I get? Now, the more unique stake I choose, it’s not free."
  },
  {
    "speaker": "Guest",
    "content": "It means that I’m gonna have to sort of incentivize people more, such that if if, if I’m saying like your ETH is only earning from me and no other service, some fraction of it, right?"
  },
  {
    "speaker": "Guest",
    "content": "So there’s like how much do I want to pay for that is guaranteed to be"
  },
  {
    "speaker": "Guest",
    "content": "service to me, and how much am I willing to pay for that’s like, potentially shared amongst many services, right? And so, I think the answer to your question is like, they have to think about both. They have to think about how much they need at the bare minimum, and how much they’re willing to have shared. And and I think that’s, I think the inevitable conclusion of, of blockchain systems is that"
  },
  {
    "speaker": "Guest",
    "content": "you have this hybrid, of, of shared and not shared, and then, then based on your use case you adjust it, and that’s like the best of all worlds, right? In a lot of ways."
  },
  {
    "speaker": "Andy",
    "content": "Yeah. We recently had, um, Mike from EtherFi on a podcast, as well as, uh, a couple others in in the LRT space, and we were kind of going back and forth about this topic in particular,"
  },
  {
    "speaker": "Andy",
    "content": "um, the, this kind of allocation to AVSs and kind of flipping it more towards LRTs rather than how AVSs should be thinking about it. ‘Cause I think that that’s important, right? That that that there’s specific use cases that can, uh, allocate a a, a wider percentage of this total stake to be slashed versus kind of not. You know, there’s super, there’s, there’s very financialized use cases, as you mentioned, like a sequencer, something that is crucial for a large amount of assets and then you know, perhaps we have something a little bit less important that can kind of, uh, narrow down that amount, and and, you know, that customizability makes it, makes it particularly flexible for these services."
  },
  {
    "speaker": "Andy",
    "content": "And then, kind of flipping it to the LRTs, what’s interesting, what’s going on with LRTs right now and the operators, is that one of these two parties has to be proficient at some sort of financial modeling to be able to, allocate and adjust risk forecasting, and these types of, of things in a traditionally, engineering-heavy kind of role. Like operators are like similar to like a validator who runs and LRTs are probably more financially savvy."
  },
  {
    "speaker": "Andy",
    "content": "So, kind of coming to, coming through this, this state of LRTs allocating their stake across AVSs,"
  },
  {
    "speaker": "Andy",
    "content": "um, how, how can LRTs use proper risk modeling to prevent or minimize any sort of, of systemic risk and, kind of like how are, how are you thinking about the way that these LRTs should allocate stake across AVSs?"
  },
  {
    "speaker": "Guest",
    "content": "Yeah, great question. So, you know, the papers between Roughgarden’s paper and my paper, they kinda get at this idea that like, there is some in, in a very overcollateralized version you have no systemic risk. So we kno-, we know like when systemic risk exists and when it doesn’t exist."
  },
  {
    "speaker": "Guest",
    "content": "But then of course you wanna find the efficient frontier, right? Like you wanna be at like no systemic risk but also efficient capital-, like, high returns, effectively, right? And that’s the, that’s the Goldilocks state."
  },
  {
    "speaker": "Guest",
    "content": "I like to think about restaking is as sort of in between pure staking and node operation and DeFi, right? Like has some aspects of DeFi, but it has a lot of guarantees that DeFi doesn’t have, right? DeFi has to rely on oracles, has to rely on liquidity in a certain way, has to rely on, a bunch of other things. I think restaking’s dependence on those same things is generally a lot lower,"
  },
  {
    "speaker": "Guest",
    "content": "and part of the reason for that is you’re using the same unit of account at every service, like you’re restaking ETH everywhere. Now, obviously you can restake multiple tokens and whatever, but realistically, the largest portion of this will be, ETH."
  }
]