[
  {
    "speaker": "Bo Du",
    "content": "back into the web free space. Um um um I'm not familiar with some of these other text stacks but I am somewhat familiar with OP Stack. I'll say that the way they treat state is a little bit different. Uh my mental model for like a Angular and how maybe like a super builder approach how state is treated there is that you're building a single giant block. And you try try to treat multiple roll ups as part of the same state machine. Maybe they're all just state shards in the same state machine. Um and then the implementation details can vary but you're trying to treat them all the same trying to this atomic thing. And then for OP Stack I I least my understanding so far following along the development of their internal interval protocol is that they're not trying to treat uh all the super chains as one giant state machine. They're just like acknowledging that okay there are multiple state machines. They'll operate differently but we'll try to facilitate lower latency communication uh across them. So it's kind of like that low latency async versus uh atomic uh comparison. And like whether or not you use ZK proofs or not is independent of these properties."
  },
  {
    "speaker": "Andy",
    "content": "Yeah so Rob was kind of mentioning how you guys could collaborate. Um and I don't know how much you guys have chatted about that. But like technically speaking uh and how would how would Super Builder collaborate with Polymer's IBC or you know if you want to speak more broadly about how kind of these atomic composability networks would interoperate with IBC and what what you guys are building at Polymer?"
  },
  {
    "speaker": "Bo Du",
    "content": "Share my perspective then I'm sure Noah has a lot of thoughts on this as well. Uh it's a little different when you have a hub and spoke model and a point-to-point model. We have a point-to-point model most of them just deploy set of smart contracts. That's going to be a little bit lower lift to integrate. Uh I know you guys have already done the integration with Hyperlane. Um and you guys just kind of like run the relayer run the smart contracts deploy smart contracts configured them and so on. Uh with a hub and spoke model it means that the and this is why we designed Polymer this way, that it means that the hub needs to be able to run in different environments. Because every single roll up cluster will have some sequencing a sequencer or a sequencer design for their particular cluster. Um and depending on what environment you're running in if you use a hub and spoke model like Polymer, our hub cannot be a single hub. It has to be multiple hubs and each hub has to be deployable over different shared sequencers or centralized sequences depending on the setup of uh particular environment. And it it needs to be like if it needs to be plug in a hack there it should be easy to approval, at some point we need to be able to generate ZK proofs. These all these like different kind of requirements. So it is much higher lift to deploy a hub and spoke model into these systems. Um but I think we're one of the only teams that are building hub and spoke solutions that are like ABC aside, that are really thinking about this. I think a lot of existing hub and spoke solutions are essentially sovereign. They have some Layer 1 blockchain it's like, I have a hub, it's a Layer 1 blockchain. If you have consensus you can't also be a a sequencer roll up. Like the the the two things don't uh don't mix as much."
  },
  {
    "speaker": "Noah Pravecek",
    "content": "Yeah, I tend to agree on that. And though with it we could kind of plug in um in the past we've explored around IBC is IBC, you can use a multisig module. So we can have Javelin itself plugin and be one of the multisig signers between different chains enabled via IBC. So that's one of the ways we can plug in. It is a larger left essentially to plug in into these hub and spoke models. Well, we built out our solution a way where Javelin's quite scalable and we're not really constrained to one machine with regards to Javelin. So it makes it so it's a much easier experience for us to really scale it horizontally on that front. So I think that over time we plan on supporting multiple different messaging layers. Right now we're really focusing on being able to support more stacks. Um supporting more different environments. Now that we're expanding Javelin out to be able to support different decentralized sequencers centralized sequencers spaced accounts and that regard as well. So, I think right now, we're really just focusing on making the best possible user experience for this tech. Um we typically like to go very much so vertical rather than horizontal. We we'd rather support one one or one or few roll up stacks and support them really well and support every single stack but not do as deep of integrations. We've just found that our customers as far they really prefer it when we have all of the features that we set out to have in every single one of our integrations, rather than providing some of the features but not many, not all of them um, and providing kind of the surface level integrations. So we've just found like the more deep dive integrations, typically have been better received. So that's kind of how we think about it."
  },
  {
    "speaker": "Rob",
    "content": "Noah saying that atomic inclusion is not enough. These people want atomic composability."
  },
  {
    "speaker": "Noah Pravecek",
    "content": "Yeah, Yeah, all of our customers are using us for atomic execution and I I personally believe shared sequencers failed. I think that lazy shared sequencers um really don't make any sense. I think atomic execution is what matters. Um and I actually have some memes on this, but searchers can price cross-chain risk. Your mother can't. So I don't think atomic inclusion gets used by people that aren't like a MEV bot or searcher or solver or something like that. It just doesn't make any sense because I I think I really don't think like the long tail of it is my mom burning USDC on base and then hoping, praying that somebody mints USDC for her on the destination chain because that would be terrible. I think we end up with a lot of the same issues as the traditional financial world if that's the case. So I think, I think atomic execution is the is the sole thing that we need to get to atomic synchronous composability. And I, I think guarantees around inclusion are much easier to get than people initially thought. And we've just really learned that by building out a shared sequencer, I don't think there's a, I think it's a hard thing to learn unless you do the thing, hit your head doing the thing and have to look at it again. And I think that that's one of the great things that we've kind of learned at NodeKit is that atomic execution is really what's hard to get. Atomic inclusion isn't as difficult. So yeah, that's kind of been our insight."
  },
  {
    "speaker": "Rob",
    "content": "Covalent is solving the long-term data availability problem, where a lot of the data availability providers today in the modular space, when you post data to them they actually only hold that data for about 12 to 16 days, and then it's basically, they could go into archive mode or often times is just kind of put away into the abyss and what Covalent's tried to do is build this long-term data availability solution, which can plug into some of these modular data availability providers and provide this longer term perpetual data solution. So what we try to think of this as is when you post transaction data onto Celestia or avail or any of these modular DA solutions or even Ethereum, Covalent is able to provide a long-term data storage and data availability platform for that data after that time period. Blockchains are billboards not databases and you know, we need these providers in the space to be able to kind of hold on to the long-term data that is provided from these providers and these blockchain states. This is where Covalent comes in. They just had a nice rebrand, check them out on Twitter as well as the website. Thank you for being here, hope you enjoyed the rest of the show. Mantle is a Layer 2 blockchain with one of the biggest on-chain treasuries in all of Crypto and they had a 100-day campaign called Metamorphosis Live Now. What this is, is it, it, it is a campaign for their liquid staked ETH token MEth as well as their upcoming liquid restaking token CMEth where you can utilize this token on the Mantle Network in a variety of different apps, some of your favorite restaking protocols and DeFi protocols and earn yields in the form of powder which will eventually be turning into a, a governance token. Mantle's been around for a while, we like them because they use their own form of EigenDA, uh, they have a good ecosystem and they're growing. So check out this 100-day Metamorphosis Campaign and hope you guys enjoy the rest on this video."
  },
  {
    "speaker": "Bo Du",
    "content": "I think it goes back to the like who, who are we building for? Who cares about this level of latency? And I think the question folks should be asking is that, like, is this the UX that, like, you know, your mother wants? It's more like, is this the UX that some like MEV bot or some trading algorithm would want to use? And, I think, uh, to Noah's point, I think the answer is, is yes. Like, you care about atomic execution. You don't care about atomic inclusion as a bot. You want to know that something definitely happened, so that you could take an action so that you, you're guaranteed that your algorithm is, is making profit. Um Crypto, crypto fair mom. Crypto fair mom. Exactly, yeah, yeah, yeah. Yeah, yeah. It's, it's all AI agents down. Like, in the future it's going to be all AI agents using these, uh, these protocols and, yeah, these are going to love atomic executions."
  },
  {
    "speaker": "Noah Pravecek",
    "content": "Oh, 100% and I think that we're going to see the same thing happen that the public markets had, where most volume in publicly traded markets are HFT bots. Yeah, yeah. There are not retail traders and I do think we'll eventually see the same thing in crypto. Um, which I'm excited for it."
  },
  {
    "speaker": "Andy",
    "content": "Noah, that, that heart on your shirt looks like, uh, an AI agent. He, he, he looks a little drunk though."
  },
  {
    "speaker": "Noah Pravecek",
    "content": "It may be one. I, I got this um, shirt for for Christmas, so I don't know, it may be an AI agent. It might just be a sleeper agent."
  },
  {
    "speaker": "Andy",
    "content": "Before we wrap up, can you guys prove that you're not AI agents?"
  },
  {
    "speaker": "Noah Pravecek",
    "content": "No comment."
  },
  {
    "speaker": "Bo Du",
    "content": "Can I, uh, I, I, I need to develop a ZKVM first and it needs to be able to verify the circuits in my body, so I can send a validity proof of humanity in"
  },
  {
    "speaker": "Andy",
    "content": "Oh my goodness, guys, thank you for coming on. That was quite insightful. Uh, really enjoyed your perspectives, uh, learned quite a bit. Have some, some stuff to chew on after this, so, going to go on some rants on Twitter later. Thank you."
  }
]