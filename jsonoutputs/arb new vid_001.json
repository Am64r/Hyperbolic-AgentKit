[
  {
    "speaker": "Andy",
    "content": "ship resistance? Or, what would you say is like the big—I know that, that like, anytime I tweet that I'm like, \"When will—when will these L2s ever decentralize their sequencer?\" it always blows up because people are always kind of pushing, but I'm not sure they understand like, the core properties needed. Right, so."
  },
  {
    "speaker": "Rob",
    "content": "Yeah."
  },
  {
    "speaker": "Rob",
    "content": "Sure, yeah. Yeah, so, I mean, some of—sometimes when people complain about the sequencer being centralized, it stems from not understanding what the sequencer does. Right? But based on what you're saying here that's not you. Um, the, uh,"
  },
  {
    "speaker": "Rob",
    "content": "right because they think that the sequencer is responsible for ensuring that the chain is correct and safe, but that's not—we would never trust, uh, a single entity to do that. Right? The sequencer's job is just to report which transactions arrived and in which order. And to do that accurately."
  },
  {
    "speaker": "Rob",
    "content": "Right. Um, it does mean though, that the sequencer has the power if it wants to sensor you. Um, it can slow down your—the inclusion of your transactions quite a bit."
  },
  {
    "speaker": "Rob",
    "content": "Um, and, so, or can somehow discriminate. It can let its friends transactions in faster or other stuff like that, right? If it misbehaves. And right now, the model is, there's one sequencer it's chosen based on community trust and pledges not to—not to cheat in these ways."
  },
  {
    "speaker": "Rob",
    "content": "Right? So, but what you would prefer to do, um, I think is to have a committee of sequencers and then say unless there's some pretty big collusion among them to cheat, you have a guarantee that this collective of sequencers will behave like an honest single sequencer."
  },
  {
    "speaker": "Rob",
    "content": "Right. And so from a user standpoint, you still send your transaction in, it gets sequenced pretty fast and, uh, you still have good user experience. But it's more robust 'cause there's no one party or even like small group of parties who—who can cheat or put their thumb on the scale in the sequencing."
  },
  {
    "speaker": "Andy",
    "content": "Yeah. Yeah, and I think the community sentiment, it—it's good to have the community kind of backstop of always, like, pushing teams to, uh, move to the next stages of decentralization whether being L2 beats stages or just like the, like—like the next iterations of—of kinda like what the best alignment with the core ethos of crypto, why we're building here today and pushing that forward for teams."
  },
  {
    "speaker": "Rob",
    "content": "Oh yeah."
  },
  {
    "speaker": "Rob",
    "content": "Yeah."
  },
  {
    "speaker": "Rob",
    "content": "Exactly, right. So decentralization, you know, if you're not—if you're not trying to decentralize, then why are you on a blockchain at all, right?"
  },
  {
    "speaker": "Rob",
    "content": "Um, because, um, I mean, that's the big virtue that you get with it—with a blockchain and, you know, Arbitrum stack and Arbitrum One have been decentralizing progressively, but really the two pieces of decentralization that are left I think, technically at the technical level, are, um, completely permissionless validation, which Bold does,"
  },
  {
    "speaker": "Rob",
    "content": "um, and then decentralizing the sequencer, so you get this protection against discrimination by the sequencer."
  },
  {
    "speaker": "Andy",
    "content": "Got it."
  },
  {
    "speaker": "Andy",
    "content": "On a—so, tying back to—to the—to the Justin Drake Bean chain L1 improvements at the consensus part, um,"
  },
  {
    "speaker": "Andy",
    "content": "a part of this was—was technical debt of Ethereum. And we talked, and—and through the presentation we, you know, we can understand that, through the work from proof of work to proof of stake, there—there is technical debt accrued. Uh, and this also applies to roll-ups."
  },
  {
    "speaker": "Rob",
    "content": "Yeah."
  },
  {
    "speaker": "Andy",
    "content": "Um, so like, I'm just asking you objectively here, like, do you think Arbitrum has technical debt that needs to be addressed or is there a route for, uh, L2s to address their technical debt, uh, periodically to kinda, in—improve as there—there could be more L1 improvements."
  },
  {
    "speaker": "Rob",
    "content": "I mean, I think any software project has technical debt. Anyone who tells you otherwise is—has—has either is lying or has never been in this business."
  },
  {
    "speaker": "Rob",
    "content": "Right? Um, and one of the things that's brilliant about technical debt, the analogy to debt, right? Is that, um, it kind of makes clear that it is like debt, right?"
  },
  {
    "speaker": "Rob",
    "content": "It—it's not the right policy to never have any debt."
  },
  {
    "speaker": "Andy",
    "content": "Yeah. It can be paid off."
  },
  {
    "speaker": "Rob",
    "content": "It can be paid o—yeah. And that's the thing: you can't get in over your head, number one. Number two, you're gonna have to pay it off eventually, and number three, until you pay it off, you're gonna, you know, you will be hampered by, um, by,"
  },
  {
    "speaker": "Andy",
    "content": "interest."
  },
  {
    "speaker": "Rob",
    "content": "interest which is really kind of the drag that technical debt puts on your ability to do everything, right?"
  },
  {
    "speaker": "Rob",
    "content": "Um, and so yeah, it's a process of managing technical debt in the code base and managing technical debt in the protocol. I think L2s can be more nimble than Ethereum. Um, and it's—that's appropriate, right? Ethereum is, um, has more at stake, um, and it is the foundation of security for all—you know, all the L2s and L3s, and so it ought to be really cautious and move very carefully."
  },
  {
    "speaker": "Rob",
    "content": "Um, L2s can lean forward a little bit more, um, because governance works differently in L2s. I think, also, you can go more quickly. Right? L1 has, um,"
  },
  {
    "speaker": "Rob",
    "content": "L1 can only change by sort of the emergence of a very strong social consensus because every time you do a hard fork in Ethereum they—you know, you need to be confident that virtually everyone will—will follow the fork, right?"
  },
  {
    "speaker": "Andy",
    "content": "The fork."
  },
  {
    "speaker": "Rob",
    "content": "Whereas in a—an L2 you can have a DAO vote, you decide, you implement, you move on."
  },
  {
    "speaker": "Andy",
    "content": "It's done. Right."
  },
  {
    "speaker": "Rob",
    "content": "Right? Um, and it's important to do diligence, right? But you have the benefit of actually reaching a decision—you don't have to debate until you know, one side, uh, decides they, um, uh, decides to stop fighting."
  },
  {
    "speaker": "Andy",
    "content": "Right."
  },
  {
    "speaker": "Andy",
    "content": "Okay, so with that lens in mind of the—of the L1 kind of, uh, slowly but potentially changing in the future. There's—like, like one of the big reasons that we discussed over the last 24 hours is, um, is—is just—is this interoperability between L2s. And so Arbitrum—Arbitrum Orbit has this kind of native interrupt that—that's there with in all of the orbit L3s and L2s. Similarly, there are other roll-up clusters as well. How—how important is it for the orbit cluster to you to be able to seamlessly interoperate between other clusters in the Ethereum space? And like, how do you think that's gonna happen because I'm—I have this kind of thesis that we'll—we'll see more like coordinated block building or like shared sequencing within clusters in these enshrined, um, zones and then more like intent based systems or, like, transport, uh, layers between. So, like, what is your mental model of like, the importance of that and then how do you think Orbit cluster will interact with the others?"
  },
  {
    "speaker": "Rob",
    "content": "Yeah."
  },
  {
    "speaker": "Rob",
    "content": "Yeah. Yeah, so, I tend not to think of Orbit as a single cluster. It's—it's kind of more of a constellation."
  },
  {
    "speaker": "Andy",
    "content": "Okay."
  },
  {
    "speaker": "Rob",
    "content": "Um, I think it's important, um, I mean, there are different ways of managing a group of chains. Right? One way is to say we're gonna have unified governance, we're gonna have unified infrastructure, um, and we're gonna operate, um, almost, like, sort of different branches of the same organization. Right? All these different chains. And that's one way you can do it. There are some advantages in the ability to interoperate from doing that, but I think that once the—once sort of the research on cross-chain interrupt gets more mature, that advantage is really gonna dissipate. And the other model, which is more like, uh, kind of more like the internet where, um, you have these separately managed chains, and they're each making their own decisions about when to upgrade, and how to configure and all of this, and they can still can communicate and interoperate with each other pretty well."
  },
  {
    "speaker": "Rob",
    "content": "Um, and if you can get to that endgame, then you can have good interrupt even across chains that are very different, that are managed differently, that use different technology stacks and so on. It will take us a while to get there as a community partly because we, I think, still don't know what are the best technical ways to manage that. Um, although that's, you know, that's one of the biggest areas of research, uh, we have going on at Off-Chain Labs is to understand—try to get a really crisp idea of, uh, what we think is the best way to manage cross-chain interrupt. But I think you'll have something more like the internet, right? Where you don't have to have one central—it's not, like, corporate IT, right? It's more like everyone manages their own stuff and, uh, you figure out the technologies you need to make it work together sort of efficiently and smoothly."
  }
]