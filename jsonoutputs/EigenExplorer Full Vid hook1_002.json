[
  {
    "speaker": "Andy",
    "content": "uh system"
  },
  {
    "speaker": "Andy",
    "content": "So"
  },
  {
    "speaker": "Andy",
    "content": "if we are thinking basically from the first principles right How can we possibly cover or or make sure all of the participants in the ecosystem uh uh work as intended How can we orchestrate this experience and and uh um orchestrate this marketplace to make sure that the information the asset and the the physical handoffs of software hardware uh and the management of all of these going smoothly And this is where I think EigenLayer um really puts the initial focus right right Um you know given the challenge of coordinating all of these participants um they've chosen very wisely to prioritize building a very robust architecture to support these services first and and uh uh at the same time you know potentially leverage their reputation to attract initial liquidity or TVL uh to the protocol right So we we we'll probably put aside the liquidity aspect for now and and those are more like a business discussion and business strategy discussion And uh let's let's focus on uh you know the incentives of governing these um services and operator relationships um you know particularly with this operator quorum design"
  },
  {
    "speaker": "Andy",
    "content": "So you know we we"
  },
  {
    "speaker": "Andy",
    "content": "In earlier we talked about the seemingly conflicting incentives of different participants right operators seek fair compensation that reflects their capabilities and resources and services conversely uh you know need a tiered network with diverse node types or service level agreements to meet their varied requirements right And the operators um quorum setup pretty elegantly addresses all of these needs and offering a very flexible fla- uh framework that accommodates both operators and the services Uh In nutshell really the the oper- op- operator quorum design allows services to experiment with various operator reward and slashing designs While this flexibility is you know caters to diverse service requirements It also introduces pretty complex reward distribution as we'll see in a bit later"
  },
  {
    "speaker": "Andy",
    "content": "Um so to better grasp this concept you know consider each operator set as a very distinct asset A or node category Similar to how a typical layer 1 blockchain or you know your rollup have uh different types of nodes right uh you have sequencers you have bundlers or whatever Um um Usually these services also have a very very diverse types right And this tiered approach basically enables services to tailor their network architecture to their specific needs And the ser- the system's complexity uh um becomes evident when we consider that each quorum has unique characteristics right uh as we've shown over here to the left uh one service might have multiple operator quorums and uh within that operator quorums we have multiple operators And within that operator group we have multiple assets and multiple stakers um and and for the individual quorum we also have SLA So it's a very nested uh architecture right From a service um perspective obviously this st- setup is ideal right Um you know the operator can have different tiers of say we have three operator quorums for three different types of nodes and for operators it's also quite intuitive because then I can look at each oper- operator quorums and see the requirements if I don't fulfill it I I don't join it Um if I fulfill one quorum I I go into that quorum right"
  },
  {
    "speaker": "Andy",
    "content": "But what actually this creates is extremely hard user experience for these stakers right uh And uh you know the these these stakers um decision making process is no longer you know as simple as choosing an operator based on reputation or promised returns These stakers actually now need to consider the specific quorums um an operator participates in and the unique risks and reward profiles of each quorum and operator's potential involvement in multiple ABS's right spreading the risks across different services and quorums By now you probably already feel like everything is int- entangled and hard to make sense of And this multi-dimensional risk assessment significantly you know complicates the stakers decision You know it's not no longer about evaluating um things in isolation but basically every aspect interacts with each other within this marketplace"
  },
  {
    "speaker": "Andy",
    "content": "And you know the complexity introduced by the operator quorum system really underscores the need for sophisticated tools and strategies we talked about to help stakers navigate this landscape right And uh um because we we potentially need several different types of roles to help not only stakers and operators to manage where their stakes are going to uh and uh but ultimately the the the point to drive home is that um you know even though looking at a stakers perspective that uh this is extremely convolu- convolutive and extremely hard to understand because of the layered um situation um they kind of under went a very important process or important decision making process from the restaking protocols that uh operator and service ha- uh hand-offs are being prioritized and that we restaking as a system can accommodate multiple variety of different services such a DA uh oracle you know co-processors each with different types of needs uh for their underlying network And uh being able to have operators uh sufficiently supporting these different variety type of networks"
  },
  {
    "speaker": "Andy",
    "content": "So I want to kind of like show you guys a few evidence of uh uh the operator quorums um and wh- the direct outcome of different op- uh the the op- operator quorums right This one is from EigenDA um which is actually the only sort of concrete examples of SLA and operator quorum design Although even being the first you know a lot of it isn't in effect still Um There are still plenty to build um you know such as watch towers for variety of service types um operator data availabilitys and and more But what's already visible is the tier design for quorums right For example um over here you are really seeing two four types of different quorums each with different ser- service level agreement attached to it um And while you're not actually being slashed as slashing is not available Uh there is a forced eject condition where uh um you know you know you stop earning rewards since you are not no longer operating or considered as an operator for this particular service uh in this case EigenDA And for the operator tiers in in our case you know it is determined by uh your stake um you know um your your share of quorum stake and the eject criteria on the other hand are governed by you know your availability"
  },
  {
    "speaker": "Andy",
    "content": "And uh you know and the direct sort of result of the operator quorum uh is is that I think this is kind of like often times misunderstood aspects of our current len- restaking landscape is all of the assets seem to be the same right if I'm staking uh Native ETH if I'm staking uh Eigen if I'm staking you know even uh sort of STEs Those are all pretty much being treated equally uh um across the board But if we dive very deep into the actual APY for each specific asset um and uh um basically distilled from different operators that uh this EigenDA by the way uh EigenDA has set up we've realized that um you know while Anchor ETH only has a 0.03% concentration in the entire EigenDA's total stake it receives the highest APY out of all of the quorums right all of the stakes And Native ETH and uh uh even the Eigen token on the hand currently receives no rewards right Obviously right now the situation is a little bit skewed as most of the stakes are in there to to farm to- um points But you know this kind of like just show you guys a very slice of um how market is functioning or how operator quorums uh are generating rewards and it certainly doesn't treat all of the stakes equally"
  },
  {
    "speaker": "Andy",
    "content": "And uh so you know the APY and the ultimately the reward uh uh is is a function of a quorum right Um the APY is really de- determined uh with the three fa- factors that that that uh uh you've major decisions on First obviously the service uh and second of all the operator quorums your uh p-"
  }
]