[
  {
    "speaker": "Ismet",
    "content": "Okay. I do wanna hear more about Supernets. So, stay tuned. But um, I ju- I want to make a quick analogy. And I I I think I am at risk of oversimplifying it. But you know, one of the, one of the things about uh just to draw parallel here to the interop space, you know, uh uh uh on the other side of the ZK interop is, is kinda like the intent space interop and and so a cross is one of those projects that has done quite well uh and like you know, pre- uh uh uh accepted into the into the bridge landscape. And one criticism of their technology has been that, you know, they run their own solver, right? And so basically, you know, they they have their their uh their solver and they say that it's a solver network. But really, like most of it just goes through their one solver, right? And it's not like, you don't have a very like robust decentralized network of solvers. And so, when we're looking at the ZK Prover Network is and, you know, is is it is it akin to like, Lagrange has deployed its prover, is that and then it's one of the provers amongst the ZK Prover Network? Is that akin to like, a cross has deployed their solver and it's one of the solvers amongst that solver network, but, you know, granted these two, these two networks have different levels of decentralization to it?"
  },
  {
    "speaker": "Andy",
    "content": "Yeah."
  },
  {
    "speaker": "Andy",
    "content": "I think the best way to think of it is like as an app chain or rollup. Um, that's the analogy I think makes the most sense. If you want to, if you're if you're a high usage application and you said I need dedicated execution space. You're not going to go build your own side chain or build your rollup stack. It just isn't reasonable, right? If you want a ZK rollup, you would contact a rast provider or we would contact ZK Sync or uh Polygon or linear or scroll or, or even Starkware. And you would say, I have this thing that I want to deploy on on a chain in your network, and I want to be able to deploy my own execution space with my own token, with my own economics, with my own design. But I want it to be on your stack and part of your broader elastic chain or agg layer or super, or super, superchain, or or you know, the the the uh orbit L3s. You you effectively want economic sovereignty, while simultaneously wanting the ability to build on existing stack. This is the same thing with Cosmos, right? If you want a Cosmos chain, you're not going to roll your own, if you wanna, if you wanna chain, you're not going to roll your own your own consensus stack, right? It's a lot of teams will build on Cosmos stack and they'll use IBC, and they'll use all the out of the box engineering frameworks that are available to them. They they they want their own token, they want their own design, they want to have value capture, but they participate in a broader network, as part of that. And that's very much the idea here."
  },
  {
    "speaker": "Ismet",
    "content": "Yep. And I think that makes sense. Uh the the app chain analogy makes sense here. Um, as well as the rollup, more broadly, but the app chain narrative you know, kinda talks about all of these, is, is very closely associated with sovereignty. Um, because now you know, there's more dedicated block space, um, but granted there is interop that connects all of these app chains. And, and we want deeper interop. And ultimately we want composability between these app chains. And so a fully connected uh internet of app chains would look a lot like uh a fully connected web of um uh you know, like Z- ZK uh enabled app chains in that internet as well. And Lagrange is helping to connect those together. Um, okay. So, that was one tangent uh thank you for that. I love that one."
  },
  {
    "speaker": "Andy",
    "content": "Yeah."
  },
  {
    "speaker": "Andy",
    "content": "I love that one. And, and to add one very quick point, you know, we, we talk about sovereignty, we talk about the evolution of what sovereignty means. Right. Two three years ago sovereignty meant you want to deploy your own app chain on the Cosmos, or on uh, you know, a parachain on Polkadot. You want agency over your gas token, you want agency over your execution client. You want agency over customizations, over, over how you build block space, block time, all this stuff. Right. But you wanted to deploy in a stack that was production grade. Now we're talking about a proof based future. Every app will use proofs I believe. And I think we are very quickly moving the direction where we will see this in the next 18 months. And the question then becomes, if everyone uses proofs, do we need sovereignty over them? Do we need sovereignty over who generates them? Do we need sovereignty over how they're paid for? Do we need sovereignty over over what's staked to guarantee liveness? I would contend that we do. And I would contend that the architecture that's going to be the most accretive and infinite sum across all of this is going to be the one that allows customization configuration and ownership and sovereignty."
  },
  {
    "speaker": "Ismet",
    "content": "Yep. Um, I wanna double click on one thing you said there, which is I think the main uh the main reason that you know, you guys in Eigenlayer are working closely together. And that is using economic security for liveness. Where predominantly, you guys are cryptographically secured, put you know, with with ZK proofs. And that's kind of like the main, the main output of the business. The the liveness isn't guaranteed, uh, cryptographically. It's, it's incentive based, uh, and crypto-, economically secured. And so, we actually had a had a podcast and part of the series as well with Tarun, who helped unpack the math behind uh economic security on a per task basis. And and helped answer the question of how we can value economic security. And and you know, you pointed to like the low cost of capital. Um, and and so how actually do we value that capital? And one of the things that that fell out of that conversation was um, an adaptation that Eigenlayer made in their security model where it used to be totally pooled, everything, you know, was was pulled together. And then you could kind of have, um, let's say I had 100 ETH that I was staking, and I could use that 100 ETH to stake in AVSA and AVSB. Could both use that economic security by, my 100 ETH. But in reality, you know, there was some issues because if AVSA slashes me, you know, that could have an impact on AVSB. Now, that, that led to this to what Tarun was calling a unique stake, almost like a reserve ratio for AVSs. Some some AVSs may need a high reserve ratio of stake, um, be-, to protect against like a black swan event. Yeah. I'm starting to maybe answer my own question here. But I, so I, I think, I'm gonna phrase this as an assumption but please correct me if I'm wrong. Um, I would assume that you guys wouldn't need a very high unique stake. You guys could set your reserve ratio that stakers you know, have to uniquely stake into uh the Lagrange AVS relatively low, because you're only staking for liveness and not uh having, you wouldn't have any significant um flashing event, uh, that, that would you know re-, reduce a staker, stakers stake by a dramatic amount. And, the the example that Tarun gave was like an oracle would maybe only be able to move the price, you know, 50 basis points or or one to two percent. And so that wouldn't lead to some dramatic staking uh slashing event. Um, and so they wouldn't need a very high unique stake amount."
  },
  {
    "speaker": "Andy",
    "content": "Yeah."
  },
  {
    "speaker": "Andy",
    "content": "Yeah. That's a good question. So, I think what it comes down to in all of these conversations is the very simple equation of cost of corruption versus profit from corruption, from corruption. So, what does it cost me to compromise some system, and what do I profit in doing so? And so the good thing about ZK systems is, is the amount that a adversarial actor can pay"
  }
]