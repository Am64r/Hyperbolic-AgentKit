[
  {
    "speaker": "Andy",
    "content": "um ETH that provides the security, and then should hear that the slashable I can token um but but um that security that you're deriving from is not the same as uh the security that you would get by building an uh a quote-unquote normal roll up and using Ethereum for DA it's more it's it's more of like a design of like uh akin to like a um like a validity or like a side chain, is is that right or no? "
  },
  {
    "speaker": "Guest",
    "content": "So for example, let's say let's consider for example um the um let's say centralized sequencing for example, right?  Yeah So um today, if Arbitrum wanted they could build a local consensus protocol for their sequencer set.  Let's say instead of uh just running one sequencer and that one sequencer orders transactions in and out,  they could basically have let's say five nodes, let's say and that five nodes would run a local consensus among themselves and be able to say, okay, this is the final order. Yeah And that has nothing to do with what you do with Ethereum.  So whatever security property you were getting from you were still getting it, that's not changing. "
  },
  {
    "speaker": "Andy",
    "content": "Right. "
  },
  {
    "speaker": "Guest",
    "content": "So so the only thing that you did was you added a new local consensus on your sequencer set.  Okay. And what we we are saying is that you could do that with an ABS, for example if you wanted. "
  },
  {
    "speaker": "Andy",
    "content": "Got it. So it's like it's like sequencer rotation. "
  },
  {
    "speaker": "Guest",
    "content": "Exactly, for example yes. Yes, yes, so for example, you could have five let's say five node ABS and you could say, I don't know, after every X blocks, uh this sequencer would be selected to do this.  So it could be a round robin mechanism, right?  Or it could be a state based system as well, yeah.  So so "
  },
  {
    "speaker": "Andy",
    "content": "And and then "
  },
  {
    "speaker": "Guest",
    "content": "Ethereum blob they could use Ethereum blob.  You know, nothing changes. So today, Arbitrum itself or optimism itself can build a decentralized sequencer set while using Ethereum blobs as a DA layer. They could do that.  Yes, that won't change anything.  But yeah, the roll ups that come to us, most of them don't want to use Ethereum DA.  Right? Yeah I mean, right now blobs have changed dynamics but you know pre you know prior to blobs, no one wanted to use it then because it's expensive.  So they wanted to use something like Celestia or something like you know, I can DA. Yeah. "
  },
  {
    "speaker": "Andy",
    "content": "Yeah. I can DA. Yeah And so you could use that, and then it will becomes like you're not like depending on the definition of roll up, you're not you're not really a roll up roll up but you are like a roll up that uses let's say, I can DA or some some other some other DA solution.  What I'm saying is that, you could still use optimism the way it works today.  And you could just replace that, your centralized sequencer by your decentralized sequencer, so you still be a roll up in the way of of optimism and Arbitrum are roll ups today. Okay? Nothing changes. "
  },
  {
    "speaker": "Andy",
    "content": "Understood. "
  },
  {
    "speaker": "Guest",
    "content": "Um okay so basically, what I what we mean by DSeg roll up is basically three different ABSes.  And again, you can pick and choose which one you want. So for example, let's say if you don't care about sequencer set um or decentralized decentralized sequencing. You don't have to pick pick that ABS.  You could pick something else. So it's a completely this is what I mean by modular. So it's modular in the sense that you can pick and choose which one you want and you can combine them in certain ways. Uh so the first uh sequencer set uh first um ABS is what we call squad, um in short for, like a team. It's basically an ABS for decentralized sequencing, as I mentioned earlier.  And again, you could you could potentially have different configuration in which how you want to run this. So for example, you have a let's say, a set of nodes that or operators in the I can layer um notation.  You have some operators that you that you ask them to to bring re-state assets. And once they have brought enough collateral, enough steak, then you allow them to become your your your your sequencer. You could also, because it's an app specific model, you could say I don't want this to be completely open.  I want this to be operate in a POA style model, where I would white list who becomes my sequencer through some sort of a governance mechanism, right? Uh so you could say, look I'm going to do a vote. And I have selected, let's say, I don't know, Figment, Block Demon, and the likes to become a set of potential set of operators. And my community will vote on which operators are supposed to be my sequencer set. Okay? So it doesn't necessarily have to be fully open because it's an app specific model, so you can customize in all sorts of ways. So you could say, I'm going to select Yep. white list my own set. And then that set will act as my sequencer set.  And again, there are different models. Yeah. Sorry.  Go on. "
  },
  {
    "speaker": "Andy",
    "content": "Rather than "
  },
  {
    "speaker": "Guest",
    "content": "Yeah, sorry go on. "
  },
  {
    "speaker": "Andy",
    "content": "Sorry. So rather than uh in the traditional kind of RAAS model where, effectively each RAAS provider is running the sequencer of these roll ups or or is running that hardware. You're giving the the ability for uh these teams to either run their own like, single node or is it just they can run they have to run a s a set of nodes with with different actors or can they just run their own single node as well? "
  },
  {
    "speaker": "Guest",
    "content": "Yes, so there could be there could be two, I I would propose to have at least two nodes at the very minimum. Got it. One could be run by the RAAS vendor,  Okay, because they understand the mechanics much better than the underlying project.  And the second could be run by the underlying project.  Understood. So I would say, this is the base like, if you want to decentralize, at least put put two things, right? At least put two "
  },
  {
    "speaker": "Andy",
    "content": "Two. Yes. "
  },
  {
    "speaker": "Guest",
    "content": "in the very minimum. Otherwise, there's no point. Um but in this model, you could have two RAASes compete on the same sequencer set as well. So for example, you could have, let's say in a model where you have, let's say, three nodes,  and one node is run by, let's say, Off Clear. The other node is run by, let's say, Caldera, and the third node is run by the project itself. And then Off Clear and Caldera could compete on sequencing fees.  Mhm So they have auction mechanism right, in the sense that Yeah. it could, you could say, look, block number X is ready to be you know, to be to be sequenced,  who's going to bet or who's going to auction it like, who's going to Bid. Bid, right? Yep. And the entity that's willing to to to put the best bid gets taken right, and he's he has the right he has the right to to to sequence for that block.  So it could be in that model as well.  Uh so we're giving that flexibility and how you want to manage this. Of course, the different frameworks need to be built for example, run round robin mechanism, sort of consensus mechanism, sort of stake based mechanism Yeah  or a completely permissioned thing or an auction based mechanism. But that there are wide there are wide ways in which you could implement this. Right. So this is this at a high level what squad does. The second part is called, which we call vital. It's consider it as a decentralized challenger network. So as I said, in case of Arbitrum or hopefully you know, it will happen with optimism as well, where you will have fraud proof mechanism built in.  And fraud proof works only if you have someone observing the network. And then a certain security model assumes that there's at least one honest party that is actually looking at the network on a regular basis and be able to flag anything that's looks malicious, right?  But of course, you can't have just one node, right, because it's not going to work. Because if you have only one node observing it and if that node goes down, basically, things kind of have to be escalated at the social layer, which is not good.  So what you want is at least some number of nodes, it doesn't have to be millions, it doesn't have to be 10,000 but at least some number of nodes um that gives you enough redundancy to to operate. And for example, in case of Arbitrum, if I recall correctly, there are like, 10 if I'm not wrong, 10 or 15, something along that. Uh two digit numbers, maximum number of nodes that are currently validating arbitrum uh you know, main net. Yeah.  So the the role of this uh network would be again that you come in as an operator, and you will have to stake your you know, your re-state ETHs. And then, you would observe the network and how it how the blocks are produced, and if any block looks you know, bad or malicious to you, you would report that. You would say, look, this is this is wrong, and he's a proof that this block has been done, no, no. As the operator, that's the operators responsibility? "
  },
  {
    "speaker": "Guest",
    "content": "Yes, yes. So you have the sequencer. Sequencer comes in with a block, there's an executor that executes the block, and tells you, here's the last or the final state.  And then, these are the operators that are challengers, they will challenge that block. It's a look, this block doesn't look good. Okay? "
  },
  {
    "speaker": "Andy",
    "content": "Okay. "
  },
  {
    "speaker": "Guest",
    "content": "At a high level, this is what vital does. It it is a network of a decentralized network of challenges.  And again, if you lose the the bisection game, then you would lose your you know, you would lose your stake in the same way, it uh Arbitrum Arbitrum's uh bisection protocol works. Yeah. And the third one is what we call Mach. It's uh it's a fast finality there.  So for example, if today, if you want to rely on Ethereum's finality, you have to wait for the roll up uh sequencer or the executor to post blocks or the transaction data on Ethereum, right?  And because Ethereum does not have instant finality or single slot finality, you have to wait for 12 to 13 minutes for that block to be finalized, and that's not ideal. And so what people end up doing is they rely on sequencers  to give you instant confirmation. But again, sequencers have no economic backing. So sequencer could say something to you, and they could lie, and they would decide not to post those transactions at all.  And so the idea behind Mach is to give you slightly stronger guarantee around around sequencers. As you can imagine, all of this still makes your roll ups still your roll up still remains a roll up. Nothing changes.  These are additional services that you could have to make your roll ups better, secure, and decentralized, okay? "
  },
  {
    "speaker": "Andy",
    "content": "Okay. Um, so at a high level, this is how it works uh in a setup model. So you have, let's say, users um who hold ETH or any of the LSTs, they will take their ETH and LSTs, they will delegate that to a sort of an operator. And that operator will pick um you know, which of these ABSes will they support for a certain roll up, and for example, let's say, Figment comes in and Figment says, you know what, I want to support be a decentralized sequencer operator for, I don't know, let's say some some some roll up, and they could have they could be assigned to that roll up.  And again, because of that, you know, they will be rewarded through the roll up provider. It could be in terms of their own native token, it could it could be in terms of native yield that comes from the sequencer revenue. For example, today, Arbitrum if they wanted, they could again, if they wanted, they could decentralize the sequencer set, and they could say, look, whatever sequencing revenue we make, let's say X% of that would go to um these um you know, operators that are running my decentralized sequencer network and then, Y% would go to the DAO.  You know? So they could divide in certain ways.  Mhm "
  },
  {
    "speaker": "Andy",
    "content": "I I I think the the the main thing here is that um the roll up token part where right now, like um the tokenomics of roll ups are kind of uh weak, in the sense that there's not really a lot to do with them. "
  }
]